hg.form.full = TotHg~ age + restime + height + weight + fishmlwk + fishpart
hg.form.full2 = TotHg~ (age + restime + height + weight + fishmlwk + fishpart)^2
ld.vars <- attributes(alias(lm(hg.form.full, data=dataset))$Complete)$dimnames[[1]]
formula.new <- as.formula(paste(paste(deparse(formula), collapse=""),paste(ld.vars, collapse="-"),sep="-"))
hg.form.full = TotHg~ age + restime + height + weight + fishmlwk + fishpart
hg.form.full2 = TotHg~ (age + restime + height + weight + fishmlwk + fishpart)^2
#ld.vars <- attributes(alias(lm(hg.form.full, data=dataset))$Complete)$dimnames[[1]]
#formula.new <- as.formula(paste(paste(deparse(formula), collapse=""),paste(ld.vars, collapse="-"),sep="-"))
dataset$fishmlwk<-int(dataset$fishmlwk)
hg.form.full = TotHg~ age + restime + height + weight + fishmlwk + fishpart
hg.form.full2 = TotHg~ (age + restime + height + weight + fishmlwk + fishpart)^2
#ld.vars <- attributes(alias(lm(hg.form.full, data=dataset))$Complete)$dimnames[[1]]
#formula.new <- as.formula(paste(paste(deparse(formula), collapse=""),paste(ld.vars, collapse="-"),sep="-"))
dataset$fishmlwk<-as.numeric(dataset$fishmlwk)
vif(lm(nex.formula,data=dataset))
hg.form.full = TotHg~ age + restime + height + weight + fishmlwk + fishpart
hg.form.full2 = TotHg~ (age + restime + height + weight + fishmlwk + fishpart)^2
#ld.vars <- attributes(alias(lm(hg.form.full, data=dataset))$Complete)$dimnames[[1]]
#formula.new <- as.formula(paste(paste(deparse(formula), collapse=""),paste(ld.vars, collapse="-"),sep="-"))
dataset$fishmlwk<-as.numeric(dataset$fishmlwk)
vif(lm(hg.form.full, data=dataset,data=dataset))
hg.form.full = TotHg~ age + restime + height + weight + fishmlwk + fishpart
hg.form.full2 = TotHg~ (age + restime + height + weight + fishmlwk + fishpart)^2
#ld.vars <- attributes(alias(lm(hg.form.full, data=dataset))$Complete)$dimnames[[1]]
#formula.new <- as.formula(paste(paste(deparse(formula), collapse=""),paste(ld.vars, collapse="-"),sep="-"))
dataset$fishmlwk<-as.numeric(dataset$fishmlwk)
vif(lm(hg.form.full,data=dataset))
hg.form.full = TotHg~ age + restime + height + weight + fishmlwk + fishpart
hg.form.full2 = TotHg~ (age + restime + height + weight + fishmlwk + fishpart)^2
#ld.vars <- attributes(alias(lm(hg.form.full, data=dataset))$Complete)$dimnames[[1]]
#formula.new <- as.formula(paste(paste(deparse(formula), collapse=""),paste(ld.vars, collapse="-"),sep="-"))
dataset$fishmlwk<-as.numeric(dataset$fishmlwk)
dataset$fishpart<-as.numeric(dataset$fishpart)
vif(lm(hg.form.full,data=dataset))
hg.form.full = TotHg~ age + restime + height + weight + fishmlwk + fishpart
hg.form.full2 = TotHg~ (age + restime + height + weight + fishmlwk + fishpart)^2
#ld.vars <- attributes(alias(lm(hg.form.full, data=dataset))$Complete)$dimnames[[1]]
#formula.new <- as.formula(paste(paste(deparse(formula), collapse=""),paste(ld.vars, collapse="-"),sep="-"))
dataset$fishmlwk<-as.numeric(dataset$fishmlwk)
dataset$fishpart<-as.numeric(dataset$fishpart)
vif(lm(hg.form.full,data=dataset))
hg.form.full = TotHg~ age + restime + height + weight + fishmlwk + fishpart
hg.form.full2 = TotHg~ (age + restime + height + weight + fishmlwk + fishpart)^2
#ld.vars <- attributes(alias(lm(hg.form.full, data=dataset))$Complete)$dimnames[[1]]
#formula.new <- as.formula(paste(paste(deparse(formula), collapse=""),paste(ld.vars, collapse="-"),sep="-"))
dataset$fishmlwk<-as.numeric(dataset$fishmlwk)
#dataset$fishpart<-as.numeric(dataset$fishpart)
vif(lm(hg.form.full,data=dataset))
hg.form.full = TotHg~ age + restime + height + weight + fishmlwk + fishpart
hg.form.full2 = TotHg~ (age + restime + height + weight + fishmlwk + fishpart)^2
#ld.vars <- attributes(alias(lm(hg.form.full, data=dataset))$Complete)$dimnames[[1]]
#formula.new <- as.formula(paste(paste(deparse(formula), collapse=""),paste(ld.vars, collapse="-"),sep="-"))
dataset$fishmlwk<-as.numeric(dataset$fishmlwk)
#dataset$fishpart<-as.numeric(dataset$fishpart)
dataset$fishpart<-as.factor(dataset$fishpart
vif(lm(hg.form.full,data=dataset))
hg.form.full = TotHg~ age + restime + height + weight + fishmlwk + fishpart
hg.form.full2 = TotHg~ (age + restime + height + weight + fishmlwk + fishpart)^2
#ld.vars <- attributes(alias(lm(hg.form.full, data=dataset))$Complete)$dimnames[[1]]
#formula.new <- as.formula(paste(paste(deparse(formula), collapse=""),paste(ld.vars, collapse="-"),sep="-"))
dataset$fishmlwk<-as.numeric(dataset$fishmlwk)
#dataset$fishpart<-as.numeric(dataset$fishpart)
dataset$fishpart<-as.factor(dataset$fishpart)
vif(lm(hg.form.full,data=dataset))
hg.form.full = TotHg~ age + restime + height + weight + fishmlwk + fishpart
hg.form.full2 = TotHg~ (age + restime + height + weight + fishmlwk + fishpart)^2
#ld.vars <- attributes(alias(lm(hg.form.full, data=dataset))$Complete)$dimnames[[1]]
#formula.new <- as.formula(paste(paste(deparse(formula), collapse=""),paste(ld.vars, collapse="-"),sep="-"))
dataset$fishmlwk<-as.factor(dataset$fishmlwk)
#dataset$fishpart<-as.numeric(dataset$fishpart)
dataset$fishpart<-as.factor(dataset$fishpart)
vif(lm(hg.form.full,data=dataset))
hg.form.full = TotHg~ age + restime + height + weight + fishmlwk + fishpart
hg.form.full2 = TotHg~ (age + restime + height + weight + fishmlwk + fishpart)^2
#ld.vars <- attributes(alias(lm(hg.form.full, data=dataset))$Complete)$dimnames[[1]]
#formula.new <- as.formula(paste(paste(deparse(formula), collapse=""),paste(ld.vars, collapse="-"),sep="-"))
dataset$fishmlwk<-as.factor(dataset$fishmlwk)
dataset$fishpart<-as.numeric(dataset$fishpart)
#dataset$fishpart<-as.factor(dataset$fishpart)
vif(lm(hg.form.full,data=dataset))
alias(lm(hg.form.full,data=dataset))
hg.form.full = TotHg~ age + restime + height + weight + fishmlwk + fishpart
hg.form.full2 = TotHg~ (age + restime + height + weight + fishmlwk + fishpart)^2
#ld.vars <- attributes(alias(lm(hg.form.full, data=dataset))$Complete)$dimnames[[1]]
#formula.new <- as.formula(paste(paste(deparse(formula), collapse=""),paste(ld.vars, collapse="-"),sep="-"))
dataset$fishmlwk<-as.factor(dataset$fishmlwk)
dataset$fishpart<-as.factor(dataset$fishpart)
#dataset$fishpart<-as.factor(dataset$fishpart)
vif(lm(hg.form.full,data=dataset))
alias(lm(hg.form.full,data=dataset))
fit <- lm(hg.form.full,data=dataset)
step <- stepAIC(fit, direction="both")
step$anova # display results
fit <- lm(hg.form.full2,data=dataset)
step <- stepAIC(fit, direction="both")
step$anova # display results
lm(hg.form.full2,data=dataset)
summary(lm(hg.form.full2,data=dataset))
summary(hg.lm.fishmlwk)
# Load here the libraries and packages you need for the rest of the analysis.
library(tidyverse)
library("MASS")
library(GGally)
library(car) # contains the vif() and leveneTest() functions
DATA_FILE = "fishermen_mercury.csv" # Location of the data csv file
dataset = read.csv(DATA_FILE) # Loading the data
dataset$MeHg <- NULL # We are asked not to use the variable MeHg
dataset$LogTotHg = log(dataset$TotHg)
dataset
dataset$fisherman <- factor(dataset$fisherman)
#dataset$fishmlwk <- factor(dataset$fishmlwk)
dataset$fishpart <- factor(dataset$fishpart)
dataset.fisherman=dataset[which(dataset$fisherman==1),]
dataset.non_fisherman=dataset[which(dataset$fisherman==0),]
summary(dataset)
ggpairs(dataset[, c("fisherman", "age", "weight", "restime", "fishmlwk", "fishpart")])
ggpairs(dataset.fisherman[, c("fisherman", "age", "weight", "restime", "fishmlwk", "fishpart")])
ggpairs(dataset.non_fisherman[, c("fisherman", "age", "weight", "restime", "fishmlwk", "fishpart")])
ggplot(dataset, aes(fisherman, TotHg)) + geom_boxplot()
ggplot(dataset, aes(age, TotHg, colour = fisherman)) + geom_point() #+ scale_y_log10() + scale_x_log10() ##Uncomment for log scales
ggplot(dataset, aes(restime, TotHg, colour = fisherman)) + geom_point()
ggplot(dataset, aes(height, TotHg, colour = fisherman)) + geom_point() #+ scale_y_log10() + scale_x_log10()
ggplot(dataset, aes(weight, TotHg, colour = fisherman)) + geom_point() #+ scale_y_log10() + scale_x_log10()
ggplot(dataset, aes(fishmlwk, TotHg, colour = fisherman)) + geom_boxplot()
ggplot(dataset, aes(fishpart, TotHg, colour = fisherman)) + geom_boxplot()
hg.form.age = TotHg ~ age # 1-D regression
hg.lm.age = lm(hg.form.age, data=dataset) # Whole population
hg.lmFi.age = lm(hg.form.age, data=dataset.fisherman) # Fishermen population
hg.lmNF.age = lm(hg.form.age, data=dataset.non_fisherman) # Control population
# Diagnostic plots
par(mfrow=c(2,2))
plot(hg.lm.age)
mtext("TotHg as a function of age - Whole population", side = 3, line = -2, outer = TRUE, cex = 1.5)
par(mfrow=c(2,2))
plot(hg.lmFi.age)
mtext("TotHg as a function of age - Fishermen population", side = 3, line = -2, outer = TRUE, cex = 1.5)
par(mfrow=c(2,2))
plot(hg.lmNF.age)
mtext("TotHg as a function of age - Non-Fishermen population", side = 3, line = -2, outer = TRUE, cex = 1.5)
ncvTest(hg.lm.age) # Output: Chisquare = 10.93327, Df = 1, p = 0.00094453
ncvTest(hg.lmFi.age) # Output: Chisquare = 4.561776, Df = 1, p = 0.032693
ncvTest(hg.lmNF.age) # Output: Chisquare = 0.2004155, Df = 1, p = 0.65439
hg.form.restime = TotHg ~ restime
hg.lm.restime = lm(hg.form.restime, data=dataset)
hg.lmFi.restime = lm(hg.form.restime, data=dataset.fisherman)
hg.lmNF.restime = lm(hg.form.restime, data=dataset.non_fisherman)
par(mfrow=c(2,2))
plot(hg.lm.restime)
mtext("TotHg as a function of restime - Whole population", side = 3, line = -2, outer = TRUE, cex = 1.5)
par(mfrow=c(2,2))
plot(hg.lmFi.restime)
mtext("TotHg as a function of restime - Fishermen population", side = 3, line = -2, outer = TRUE, cex = 1.5)
par(mfrow=c(2,2))
plot(hg.lmNF.restime)
mtext("TotHg as a function of restime - Non-Fishermen population", side = 3, line = -2, outer = TRUE, cex = 1.5)
ncvTest(hg.lm.restime ) # Output: Chisquare = 0.2252327, Df = 1, p = 0.63508
ncvTest(hg.lmFi.restime ) # Output: Chisquare = 0.9487475, Df = 1, p = 0.33004
ncvTest(hg.lmNF.restime ) # Output: Chisquare = 0.2388775, Df = 1, p = 0.62502
hg.form.logWeight = LogTotHg ~ weight
hg.lm.logWeight = lm(hg.form.logWeight, data=dataset)
hg.lmFi.logWeight = lm(hg.form.logWeight, data=dataset.fisherman)
hg.lmNF.logWeight = lm(hg.form.logWeight, data=dataset.non_fisherman)
par(mfrow=c(2,2))
plot(hg.lm.logWeight)
mtext("LogTotHg as a function of weight - Whole population", side = 3, line = -2, outer = TRUE, cex = 1.5)
par(mfrow=c(2,2))
plot(hg.lmFi.logWeight)
mtext("LogTotHg as a function of weight - Fishermen population", side = 3, line = -2, outer = TRUE, cex = 1.5)
par(mfrow=c(2,2))
plot(hg.lmNF.logWeight)
mtext("LogTotHg as a function of weight - Non-Fishermen population", side = 3, line = -2, outer = TRUE, cex = 1.5)
hg.form.weight = TotHg ~ weight
hg.lm.weight = lm(hg.form.weight, data=dataset)
hg.lmFi.weight = lm(hg.form.weight, data=dataset.fisherman)
hg.lmNF.weight = lm(hg.form.weight, data=dataset.non_fisherman)
par(mfrow=c(2,2))
plot(hg.lm.weight)
mtext("TotHg as a function of weight - Whole population", side = 3, line = -2, outer = TRUE, cex = 1.5)
par(mfrow=c(2,2))
plot(hg.lmFi.weight)
mtext("TotHg as a function of weight - Fishermen population", side = 3, line = -2, outer = TRUE, cex = 1.5)
par(mfrow=c(2,2))
plot(hg.lmNF.weight)
mtext("TotHg as a function of weight - Non-Fishermen population", side = 3, line = -2, outer = TRUE, cex = 1.5)
hg.form.height = TotHg ~ height
hg.lm.height = lm(hg.form.height, data=dataset)
hg.lmFi.height = lm(hg.form.height, data=dataset.fisherman)
hg.lmNF.height = lm(hg.form.height, data=dataset.non_fisherman)
par(mfrow=c(2,2))
plot(hg.lm.height)
mtext("TotHg as a function of height - Whole population", side = 3, line = -2, outer = TRUE, cex = 1.5)
par(mfrow=c(2,2))
plot(hg.lmFi.height)
mtext("TotHg as a function of height - Fishermen population", side = 3, line = -2, outer = TRUE, cex = 1.5)
par(mfrow=c(2,2))
plot(hg.lmNF.height)
mtext("TotHg as a function of height - Non-Fishermen population", side = 3, line = -2, outer = TRUE, cex = 1.5)
hg.form.fishmlwk = TotHg ~ fishmlwk
hg.lm.fishmlwk = lm(hg.form.fishmlwk, data=dataset)
hg.lmFi.fishmlwk = lm(hg.form.fishmlwk, data=dataset.fisherman)
hg.lmNF.fishmlwk = lm(hg.form.fishmlwk, data=dataset.non_fisherman)
par(mfrow=c(2,2))
plot(hg.lm.fishmlwk)
mtext("TotHg as a function of fishmlwk - Whole population", side = 3, line = -2, outer = TRUE, cex = 1.5)
par(mfrow=c(2,2))
plot(hg.lmFi.fishmlwk)
mtext("TotHg as a function of fishmlwk - Fishermen population", side = 3, line = -2, outer = TRUE, cex = 1.5)
par(mfrow=c(2,2))
plot(hg.lmNF.fishmlwk)
mtext("TotHg as a function of fishmlwk - Non-Fishermen population", side = 3, line = -2, outer = TRUE, cex = 1.5)
hg.form.fisherman = TotHg ~ fisherman
hg.aov.fisherman = aov(hg.form.fisherman, data= dataset)
summary(hg.aov.fisherman)
hg.form.full = TotHg~ age + restime + height + weight + fishmlwk + fishpart
hg.form.full2 = TotHg~ (age + restime + height + weight + fishmlwk + fishpart)^2
vif(lm(hg.form.full,data=dataset))
fit <- lm(hg.form.full,data=dataset)
step <- stepAIC(fit, direction="both")
step$anova # display results
fit <- lm(hg.form.full2,data=dataset)
step <- stepAIC(fit, direction="both")
step$anova # display results
selected.model = TotHg ~ age + restime + height + weight + fishmlwk + fishpart + age:height + age:weight + age:fishpart + restime:weight + restime:fishmlwk + restime:fishpart + height:fishmlwk + height:fishpart + weight:fishpart
hg.lm.selected.model=lm(selected.model, data=dataset)
hg.lmFi.selected.model=lm(selected.model, data=dataset.fisherman)
hg.lmNF.selected.model=lm(selected.model, data=dataset.non_fisherman)
summary(hg.lm.selected.model)
summary(hg.lmFi.selected.model)
summary(hg.lmNF.selected.model)
plot(hg.lm.selected.model, which=1)
plot(hg.lm.selected.model, which=2)
plot(hg.lm.selected.model, which=3)
plot(hg.lm.selected.model, which=4)
plot(hg.lm.selected.model, which=5)
plot(hg.lm.selected.model, which=6)
dataset.without.inf=dataset[c(-6,-56,-70,-85),]
dataset.fisherman.without.inf=dataset.fisherman[c(-6,-56,-70,-85),]
dataset.non_fisherman.without.inf=dataset.non_fisherman[c(-6,-56,-70,-85),]
hg.lm.new.selected.model=lm(selected.model, data=dataset.without.inf)
hg.lmFi.new.selected.model=lm(selected.model, data=dataset.fisherman.without.inf)
hg.lmNF.new.selected.model=lm(selected.model, data=dataset.non_fisherman.without.inf)
summary(hg.lm.new.selected.model)
summary(hg.lmFi.new.selected.model)
summary(hg.lmNF.new.selected.model)
plot(hg.lm.new.selected.model, which=1)
plot(hg.lm.new.selected.model, which=2)
plot(hg.lm.new.selected.model, which=3)
plot(hg.lm.new.selected.model, which=4)
plot(hg.lm.new.selected.model, which=5)
plot(hg.lm.new.selected.model, which=6)
install.packages("robust")
install.packages("robustbase")
install.packages("robustbase")
library("robust", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
detach("package:robust", unload=TRUE)
install.packages(c("callr", "cli", "colorspace", "fs", "glue", "lazyeval", "purrr", "Rcpp", "readxl", "rmarkdown", "rstudioapi", "stringi", "tibble", "tinytex", "zip"))
library("robust", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
remove.packages("robust")
install.packages("robustbase")
install.packages("robust")
install.packages("robust")
library("robust", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
library("robustbase", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
# Load here the libraries and packages you need for the rest of the analysis.
library(tidyverse)
library("MASS")
library(GGally)
library(car) # contains the vif() and leveneTest() functions
DATA_FILE = "fishermen_mercury.csv" # Location of the data csv file
dataset = read.csv(DATA_FILE) # Loading the data
dataset$MeHg <- NULL # We are asked not to use the variable MeHg
dataset$LogTotHg <- log(dataset$TotHg)
dataset$logFishmlwk <- log(dataset$fishmlwk + 1)
dataset
# Loading data
DATA_FILE = "fishermen_mercury.csv" # Location of the data csv file
dataset = read.csv(DATA_FILE) # Loading the data
dataset$MeHg <- NULL # We are asked not to use the variable MeHg
dataset$LogTotHg <- log(dataset$TotHg)
dataset$logFishmlwk <- log(dataset$fishmlwk + 1)
#Converting categorical variables into factors
dataset$fisherman <- factor(dataset$fisherman)
dataset$fishpart <- factor(dataset$fishpart)
dataset
summary(dataset)
summary(dataset %>% filter(fisherman==1))
summary(dataset %>% filter(fisherman==factor(1)))
# Loading data
DATA_FILE = "fishermen_mercury.csv" # Location of the data csv file
dataset = read.csv(DATA_FILE) # Loading the data
dataset$MeHg <- NULL # We are asked not to use the variable MeHg
dataset$LogTotHg <- log(dataset$TotHg)
dataset$logFishmlwk <- log(dataset$fishmlwk + 1)
#Converting categorical variables into factors
#dataset$fisherman <- factor(dataset$fisherman)
dataset$fishpart <- factor(dataset$fishpart)
summary(dataset %>% filter(fisherman==1))
summary(dataset %>% filter(fisherman==0))
# Loading data
DATA_FILE = "fishermen_mercury.csv" # Location of the data csv file
dataset = read.csv(DATA_FILE) # Loading the data
dataset$MeHg <- NULL # We are asked not to use the variable MeHg
dataset$LogTotHg <- log(dataset$TotHg)
dataset$logFishmlwk <- log(dataset$fishmlwk + 1)
#Converting categorical variables into factors
dataset$fisherman <- factor(dataset$fisherman)
dataset$fishpart <- factor(dataset$fishpart)
# Loading data
DATA_FILE = "fishermen_mercury.csv" # Location of the data csv file
dataset = read.csv(DATA_FILE) # Loading the data
dataset$MeHg <- NULL # We are asked not to use the variable MeHg
dataset$LogTotHg <- log(dataset$TotHg)
dataset$logFishmlwk <- log(dataset$fishmlwk + 1)
#Converting categorical variables into factors
dataset$fisherman <- factor(dataset$fisherman)
dataset$fishpart <- factor(dataset$fishpart)
ggplot(dataset, aes(group=fisherman, y=TotHg)) + geom_boxplot()
t.test(x=dataset[which(dataset$fisherman==1),]$TotHg, y=dataset[which(dataset$fisherman==0),]$TotHg, alternative = "greater", var.equal=FALSE)
ggplot(dataset, aes(group=fisherman, y=TotHg)) + geom_boxplot() + labs(x = "Population")
ggplot(dataset, aes(group=fisherman, y=TotHg)) + geom_boxplot() + labs(x = "Population") + labs(y = "Total Hg levels in the hair")
ggplot(dataset, aes(group=fisherman, y=TotHg)) + geom_boxplot() + labs(x = "Population") + labs(y = "Total Hg levels in the hair") + scale_x_discrete(labels = c('Four','Six'))
ggplot(dataset, aes(group=fisherman, y=TotHg)) + geom_boxplot() + labs(x = "Population") + labs(y = "Total Hg levels in the hair") + scale_x_discrete(labels = c('Four','Six')) + theme_bw()
ggplot(dataset, aes(group=fisherman, y=TotHg, fill=fisherman)) + geom_boxplot() + labs(x = "Population") + labs(y = "Total Hg levels in the hair") + scale_x_discrete(labels = c('Four','Six')) + theme_bw()
ggplot(dataset, aes(group=fisherman, y=TotHg, fill=fisherman)) + geom_boxplot() + labs(y = "Total Hg levels in the hair") + scale_x_discrete(labels = c('Four','Six')) + theme_bw()
ggplot(dataset, aes(group=fisherman, y=TotHg, fill=fisherman)) + geom_boxplot() + labs(y = "Total Hg levels in the hair") + scale_x_discrete() + scale_fill_manual(labels=c("hESC1","hESC2")) + theme_bw()
ggplot(dataset, aes(group=fisherman, y=TotHg, fill=fisherman)) + geom_boxplot() + labs(y = "Total Hg levels in the hair") + scale_x_discrete(limits=c("0", "1")) + theme_bw()
ggplot(dataset, aes(group=fisherman, y=TotHg, fill=fisherman)) + geom_boxplot() + labs(y = "Total Hg levels in the hair") + scale_x_discrete() + scale_fill_discrete(name = "Dose", labels = c("A", "B")) + theme_bw()
ggplot(dataset, aes(group=fisherman, y=TotHg, fill=fisherman)) + geom_boxplot() + labs(y = "Total Hg levels in the hair") + scale_x_discrete() + scale_fill_discrete(name = "Population", labels = c("Control group", "Fishermen")) + theme_bw()
# Load here the libraries and packages you need for the rest of the analysis.
library(tidyverse)
library("MASS")
library(GGally)
library(car) # contains the vif() and leveneTest() functions
DATA_FILE = "fishermen_mercury.csv" # Location of the data csv file
dataset = read.csv(DATA_FILE) # Loading the data
dataset$MeHg <- NULL # We are asked not to use the variable MeHg
dataset$LogTotHg <- log(dataset$TotHg)
dataset$logFishmlwk <- log(dataset$fishmlwk + 1)
dataset
dataset$fisherman <- factor(dataset$fisherman)
#dataset$fishmlwk <- factor(dataset$fishmlwk)
dataset$fishpart <- factor(dataset$fishpart)
dataset.fisherman=dataset[which(dataset$fisherman==1),]
dataset.non_fisherman=dataset[which(dataset$fisherman==0),]
summary(dataset)
ggpairs(dataset[, c("fisherman", "age", "weight", "restime", "fishmlwk", "fishpart")])
ggpairs(dataset.fisherman[, c("fisherman", "age", "weight", "restime", "fishmlwk", "fishpart")])
ggpairs(dataset.non_fisherman[, c("fisherman", "age", "weight", "restime", "fishmlwk", "fishpart")])
ggplot(dataset, aes(fisherman, TotHg)) + geom_boxplot()
ggplot(dataset, aes(age, TotHg, colour = fisherman)) + geom_point() #+ scale_y_log10() + scale_x_log10() ##Uncomment for log scales
ggplot(dataset, aes(restime, TotHg, colour = fisherman)) + geom_point()
ggplot(dataset, aes(height, TotHg, colour = fisherman)) + geom_point() #+ scale_y_log10() + scale_x_log10()
ggplot(dataset, aes(weight, TotHg, colour = fisherman)) + geom_point() #+ scale_y_log10() + scale_x_log10()
ggplot(dataset, aes(fishmlwk, TotHg, colour = fisherman)) + geom_boxplot()
ggplot(dataset, aes(fishpart, TotHg, colour = fisherman)) + geom_boxplot()
hg.form.age = TotHg ~ age # 1-D regression
hg.lm.age = lm(hg.form.age, data=dataset) # Whole population
hg.lmFi.age = lm(hg.form.age, data=dataset.fisherman) # Fishermen population
hg.lmNF.age = lm(hg.form.age, data=dataset.non_fisherman) # Control population
# Diagnostic plots
par(mfrow=c(2,2))
plot(hg.lm.age)
mtext("TotHg as a function of age - Whole population", side = 3, line = -2, outer = TRUE, cex = 1.5)
par(mfrow=c(2,2))
plot(hg.lmFi.age)
mtext("TotHg as a function of age - Fishermen population", side = 3, line = -2, outer = TRUE, cex = 1.5)
par(mfrow=c(2,2))
plot(hg.lmNF.age)
mtext("TotHg as a function of age - Non-Fishermen population", side = 3, line = -2, outer = TRUE, cex = 1.5)
ncvTest(hg.lm.age) # Output: Chisquare = 10.93327, Df = 1, p = 0.00094453
ncvTest(hg.lmFi.age) # Output: Chisquare = 4.561776, Df = 1, p = 0.032693
ncvTest(hg.lmNF.age) # Output: Chisquare = 0.2004155, Df = 1, p = 0.65439
hg.form.restime = TotHg ~ restime
hg.lm.restime = lm(hg.form.restime, data=dataset)
hg.lmFi.restime = lm(hg.form.restime, data=dataset.fisherman)
hg.lmNF.restime = lm(hg.form.restime, data=dataset.non_fisherman)
par(mfrow=c(2,2))
plot(hg.lm.restime)
mtext("TotHg as a function of restime - Whole population", side = 3, line = -2, outer = TRUE, cex = 1.5)
par(mfrow=c(2,2))
plot(hg.lmFi.restime)
mtext("TotHg as a function of restime - Fishermen population", side = 3, line = -2, outer = TRUE, cex = 1.5)
par(mfrow=c(2,2))
plot(hg.lmNF.restime)
mtext("TotHg as a function of restime - Non-Fishermen population", side = 3, line = -2, outer = TRUE, cex = 1.5)
ncvTest(hg.lm.restime ) # Output: Chisquare = 0.2252327, Df = 1, p = 0.63508
ncvTest(hg.lmFi.restime ) # Output: Chisquare = 0.9487475, Df = 1, p = 0.33004
ncvTest(hg.lmNF.restime ) # Output: Chisquare = 0.2388775, Df = 1, p = 0.62502
hg.form.weight = TotHg ~ weight
hg.lm.weight = lm(hg.form.weight, data=dataset)
hg.lmFi.weight = lm(hg.form.weight, data=dataset.fisherman)
hg.lmNF.weight = lm(hg.form.weight, data=dataset.non_fisherman)
par(mfrow=c(2,2))
plot(hg.lm.weight)
mtext("TotHg as a function of weight - Whole population", side = 3, line = -2, outer = TRUE, cex = 1.5)
par(mfrow=c(2,2))
plot(hg.lmFi.weight)
mtext("TotHg as a function of weight - Fishermen population", side = 3, line = -2, outer = TRUE, cex = 1.5)
par(mfrow=c(2,2))
plot(hg.lmNF.weight)
mtext("TotHg as a function of weight - Non-Fishermen population", side = 3, line = -2, outer = TRUE, cex = 1.5)
hg.form.height = TotHg ~ height
hg.lm.height = lm(hg.form.height, data=dataset)
hg.lmFi.height = lm(hg.form.height, data=dataset.fisherman)
hg.lmNF.height = lm(hg.form.height, data=dataset.non_fisherman)
par(mfrow=c(2,2))
plot(hg.lm.height)
mtext("TotHg as a function of height - Whole population", side = 3, line = -2, outer = TRUE, cex = 1.5)
par(mfrow=c(2,2))
plot(hg.lmFi.height)
mtext("TotHg as a function of height - Fishermen population", side = 3, line = -2, outer = TRUE, cex = 1.5)
par(mfrow=c(2,2))
plot(hg.lmNF.height)
mtext("TotHg as a function of height - Non-Fishermen population", side = 3, line = -2, outer = TRUE, cex = 1.5)
hg.form.fishmlwk = TotHg ~ fishmlwk
hg.lm.fishmlwk = lm(hg.form.fishmlwk, data=dataset)
hg.lmFi.fishmlwk = lm(hg.form.fishmlwk, data=dataset.fisherman)
hg.lmNF.fishmlwk = lm(hg.form.fishmlwk, data=dataset.non_fisherman)
par(mfrow=c(2,2))
plot(hg.lm.fishmlwk)
mtext("TotHg as a function of fishmlwk - Whole population", side = 3, line = -2, outer = TRUE, cex = 1.5)
par(mfrow=c(2,2))
plot(hg.lmFi.fishmlwk)
mtext("TotHg as a function of fishmlwk - Fishermen population", side = 3, line = -2, outer = TRUE, cex = 1.5)
par(mfrow=c(2,2))
plot(hg.lmNF.fishmlwk)
mtext("TotHg as a function of fishmlwk - Non-Fishermen population", side = 3, line = -2, outer = TRUE, cex = 1.5)
hg.form.fisherman = TotHg ~ fisherman
hg.aov.fisherman = aov(hg.form.fisherman, data= dataset)
summary(hg.aov.fisherman)
hg.form.fishpart = TotHg ~ fishpart
hg.aov.fishpart = aov(hg.form.fishpart, data= dataset)
summary(hg.aov.fishpart)
hg.form.full = TotHg~ age + restime + height + weight + fishmlwk + fishpart
hg.form.full2 = TotHg~ (age + restime + height + weight + fishpart)^2
vif(lm(hg.form.full2,data=dataset))
fit <- lm(hg.form.full,data=dataset)
step <- stepAIC(fit, direction="both")
step$anova # display results
summary(step)
plot(step)
hg.form.custom = TotHg ~ age + restime + height + weight + fishmlwk + fishpart
drop1(lm(hg.form.custom, data = dataset), test="F")
# > delete age
hg.form.custom = TotHg ~ restime + height + weight + fishmlwk + fishpart
drop1(lm(hg.form.custom, data = dataset), test="F")
# > delete height
hg.form.custom = TotHg ~ restime + weight + fishmlwk + fishpart
drop1(lm(hg.form.custom, data = dataset), test="F")
# > delete fishpart
hg.form.custom = TotHg ~ restime + weight + fishmlwk
drop1(lm(hg.form.custom, data = dataset), test="F")
# > delete restime
hg.form.custom = TotHg ~ weight + fishmlwk
drop1(lm(hg.form.custom, data = dataset), test="F")
summary(lm(hg.form.custom, data = dataset))
# > seems ok !
# The backward selection gives the same model than stepwise.
fit <- lm(hg.form.full2,data=dataset)
step <- stepAIC(fit, direction="both")
step$anova # display results
summary(step)
selected.model = TotHg ~ age + restime + height + weight + fishmlwk + fishpart + age:height + age:weight + age:fishpart + restime:weight + restime:fishmlwk + restime:fishpart + height:fishmlwk + height:fishpart + weight:fishpart
hg.lm.selected.model=lm(selected.model, data=dataset)
hg.lmFi.selected.model=lm(selected.model, data=dataset.fisherman)
hg.lmNF.selected.model=lm(selected.model, data=dataset.non_fisherman)
summary(hg.lm.selected.model)
summary(hg.lmFi.selected.model)
summary(hg.lmNF.selected.model)
plot(hg.lm.selected.model, which=1)
plot(hg.lm.selected.model, which=2)
plot(hg.lm.selected.model, which=3)
plot(hg.lm.selected.model, which=4)
plot(hg.lm.selected.model, which=5)
plot(hg.lm.selected.model, which=6)
dataset.without.inf=dataset[c(-6,-56,-70,-85),]
dataset.fisherman.without.inf=dataset.fisherman[c(-6,-56,-70,-85),]
dataset.non_fisherman.without.inf=dataset.non_fisherman[c(-6,-56,-70,-85),]
hg.lm.new.selected.model=lm(selected.model, data=dataset.without.inf)
hg.lmFi.new.selected.model=lm(selected.model, data=dataset.fisherman.without.inf)
hg.lmNF.new.selected.model=lm(selected.model, data=dataset.non_fisherman.without.inf)
summary(hg.lm.new.selected.model)
summary(hg.lmFi.new.selected.model)
summary(hg.lmNF.new.selected.model)
plot(hg.lm.new.selected.model, which=1)
plot(hg.lm.new.selected.model, which=2)
plot(hg.lm.new.selected.model, which=3)
plot(hg.lm.new.selected.model, which=4)
plot(hg.lm.new.selected.model, which=5)
plot(hg.lm.new.selected.model, which=6)
hg.rlm.selected.model <- rlm(selected.model, data=dataset)  # robust reg model
#hg.rlmFi.selected.model <- rlm(selected.model, data=dataset.fisherman)
#hg.rlmNF.selected.model <- rlm(selected.model, data=dataset.non_fisherman)
summary(hg.rlm.selected.model)
#summary(hg.rlmFi.selected.model)
#summary(hg.rlmNF.selected.model)
fit <- lm(hg.form.full,data=dataset)
step <- stepAIC(fit, direction="both")
step$anova # display results
summary(step)
plot(step)
fit <- lm(hg.form.full,data=dataset.fisherman)
step <- stepAIC(fit, direction="both")
step$anova # display results
summary(step)
plot(step)
fit <- lm(TotHg~ age + restime + height + weight + fishmlwk, data=dataset.non_fisherman) # hg.form.full
step <- stepAIC(fit, direction="both")
step$anova # display results
summary(step)
plot(step)
table(dataset$fisherman, dataset$fishmlwk)
