drop1(lm(hg.form.custom, data = dataset), test="F")
#>delete fisherman:fishmlwk
hg.form.custom = TotHg ~ fisherman + age + restime + height + weight + fishmlwk + fishpart +  fisherman:(age + restime + height + weight + fishmlwk + fishpart)
drop1(lm(hg.form.custom, data = dataset), test="F")
#>delete restime:fisherman
hg.form.custom = TotHg ~ fisherman + age + restime + height + weight + fishmlwk + fishpart +  fisherman:(age + height + weight + fishmlwk + fishpart)
drop1(lm(hg.form.custom, data = dataset), test="F")
#>delete fishpart:fisherman
hg.form.custom = TotHg ~ fisherman + age + restime + height + weight + fishmlwk + fishpart +  fisherman:(age + height + weight + fishmlwk)
drop1(lm(hg.form.custom, data = dataset), test="F")
#>delete height:fisherman
hg.form.custom = TotHg ~ fisherman + age + restime + height + weight + fishmlwk + fishpart +  fisherman:(age + weight + fishmlwk)
drop1(lm(hg.form.custom, data = dataset), test="F")
#>delete age:fisherman
hg.form.custom = TotHg ~ fisherman + age + restime + height + weight + fishmlwk + fishpart +  fisherman:(weight + fishmlwk)
drop1(lm(hg.form.custom, data = dataset), test="F")
#>delete fishpart
hg.form.custom = TotHg ~ fisherman + age + restime + height + weight + fishmlwk + fisherman:(weight + fishmlwk)
drop1(lm(hg.form.custom, data = dataset), test="F")
#>delete height
hg.form.custom = TotHg ~ fisherman + age + restime + weight + fishmlwk + fisherman:(weight + fishmlwk)
drop1(lm(hg.form.custom, data = dataset), test="F")
#>delete age
hg.form.custom = TotHg ~ fisherman + restime + weight + fishmlwk + fisherman:(weight + fishmlwk)
drop1(lm(hg.form.custom, data = dataset), test="F")
#>delete restime
hg.form.custom = TotHg ~ fisherman + weight + fishmlwk + fisherman:(weight + fishmlwk)
drop1(lm(hg.form.custom, data = dataset), test="F")
#>delete fisherman:weight
hg.form.custom = TotHg ~ fisherman + weight + fishmlwk + fisherman:fishmlwk
drop1(lm(hg.form.custom, data = dataset), test="F")
#>delete fisherman:fishmlwk
hg.form.custom = TotHg ~ fisherman + weight + fishmlwk
drop1(lm(hg.form.custom, data = dataset), test="F")
#>delete fisherman
hg.form.custom = TotHg ~ weight + fishmlwk
drop1(lm(hg.form.custom, data = dataset), test="F")
#>delete fisherman
# Load here the libraries and packages you need for the rest of the analysis.
library(tidyverse)
library("MASS")
library(GGally)
library(car) # contains the vif() and leveneTest() functions
# Loading data
DATA_FILE = "fishermen_mercury.csv" # Location of the data csv file
dataset = read.csv(DATA_FILE) # Loading the data
dataset$MeHg <- NULL # We are asked not to use the variable MeHg
dataset$LogTotHg <- log(dataset$TotHg)
dataset$logFishmlwk <- log(dataset$fishmlwk + 1)
#Converting categorical variables into factors
dataset$fisherman <- factor(dataset$fisherman)
dataset$fishpart <- factor(dataset$fishpart)
ggplot(dataset, aes(group=fisherman, y=TotHg, fill=fisherman)) + geom_boxplot() + labs(y = "Total Hg concentration in the hair (mg/g)") + scale_x_discrete() + scale_fill_discrete(name = "Population", labels = c("Control group", "Fishermen")) + theme_bw()
t.test(x=dataset[which(dataset$fisherman==1),]$TotHg, y=dataset[which(dataset$fisherman==0),]$TotHg, alternative = "greater", var.equal=FALSE)
table(dataset$fisherman, dataset$fishmlwk)
ggplot(dataset, aes(fisherman, TotHg)) + geom_boxplot()
ggplot(dataset, aes(age, TotHg, colour = fisherman)) + geom_point() #+ scale_y_log10() + scale_x_log10() ##Uncomment for log scales
ggplot(dataset, aes(restime, TotHg, colour = fisherman)) + geom_point()
ggplot(dataset, aes(height, TotHg, colour = fisherman)) + geom_point() #+ scale_y_log10() + scale_x_log10()
ggplot(dataset, aes(weight, TotHg, colour = fisherman)) + geom_point() #+ scale_y_log10() + scale_x_log10()
ggplot(dataset, aes(fishmlwk, TotHg, colour = fisherman)) + geom_boxplot()
ggplot(dataset, aes(fishpart, TotHg, colour = fisherman)) + geom_boxplot()
hg.form.full = TotHg~ fisherman + age + restime + height + weight + fishmlwk + fishpart #+ fisherman:(age + restime + height + weight + fishmlwk + fishpart) : we would like to pu these interactions also but the VIF doesn't work because of the aliased coefficients
hg.form.full2 = TotHg~ (age + restime + height + weight + fishpart)^2
vif(lm(hg.form.full,data=dataset))
vif(lm(hg.form.full2,data=dataset))
hg.form.pre_selection=TotHg ~ fisherman + age + restime + height + weight + fishmlwk + fishpart + fisherman:(age + restime + height + weight + fishmlwk + fishpart)
fit <- lm(hg.form.pre_selection,data=dataset)
selection <- stepAIC(fit, direction="both")
selection$anova # display results
hg.form.custom = TotHg ~ fisherman + age + restime + height + weight + fishmlwk + fishpart +  fisherman:(age + restime + height + weight + fishmlwk + fishpart)
drop1(lm(hg.form.custom, data = dataset), test="F")
#>delete restime:fisherman
hg.form.custom = TotHg ~ fisherman + age + restime + height + weight + fishmlwk + fishpart +  fisherman:(age + height + weight + fishmlwk + fishpart)
drop1(lm(hg.form.custom, data = dataset), test="F")
#>delete fishpart:fisherman
hg.form.custom = TotHg ~ fisherman + age + restime + height + weight + fishmlwk + fishpart +  fisherman:(age + height + weight + fishmlwk)
drop1(lm(hg.form.custom, data = dataset), test="F")
#>delete height:fisherman
hg.form.custom = TotHg ~ fisherman + age + restime + height + weight + fishmlwk + fishpart +  fisherman:(age + weight + fishmlwk)
drop1(lm(hg.form.custom, data = dataset), test="F")
#>delete age:fisherman
hg.form.custom = TotHg ~ fisherman + age + restime + height + weight + fishmlwk + fishpart +  fisherman:(weight + fishmlwk)
drop1(lm(hg.form.custom, data = dataset), test="F")
#>delete fishpart
hg.form.custom = TotHg ~ fisherman + age + restime + height + weight + fishmlwk + fisherman:(weight + fishmlwk)
drop1(lm(hg.form.custom, data = dataset), test="F")
#>delete height
hg.form.custom = TotHg ~ fisherman + age + restime + weight + fishmlwk + fisherman:(weight + fishmlwk)
drop1(lm(hg.form.custom, data = dataset), test="F")
#>delete age
hg.form.custom = TotHg ~ fisherman + restime + weight + fishmlwk + fisherman:(weight + fishmlwk)
drop1(lm(hg.form.custom, data = dataset), test="F")
#>delete restime
hg.form.custom = TotHg ~ fisherman + weight + fishmlwk + fisherman:(weight + fishmlwk)
drop1(lm(hg.form.custom, data = dataset), test="F")
#>delete fisherman:weight
hg.form.custom = TotHg ~ fisherman + weight + fishmlwk + fisherman:fishmlwk
drop1(lm(hg.form.custom, data = dataset), test="F")
#>delete fisherman:fishmlwk
hg.form.custom = TotHg ~ fisherman + weight + fishmlwk
drop1(lm(hg.form.custom, data = dataset), test="F")
#>delete fisherman
hg.form.custom = TotHg ~ weight + fishmlwk
drop1(lm(hg.form.custom, data = dataset), test="F")
#>delete fisherman
hg.form.selected=TotHg ~ fisherman + weight + fishmlwk + fisherman:weight + fisherman:fishmlwk
hg.lm.selected.model=lm(hg.form.selected, data=dataset)
summary(hg.lm.selected_model)
ggplot(dataset, aes(age, TotHg, colour = fisherman)) + geom_point() #+ scale_y_log10() + scale_x_log10() ##Uncomment for log scales
ggplot(dataset, aes(restime, TotHg, colour = fisherman)) + geom_point()
ggplot(dataset, aes(fishmlwk, TotHg, colour = fisherman)) + geom_boxplot()
hg.form.selected=TotHg ~ fisherman + weight + fishmlwk + fisherman:weight + fisherman:fishmlwk
hg.lm.selected.model=lm(hg.form.selected, data=dataset)
summary(hg.lm.selected.model)
# Load here the libraries and packages you need for the rest of the analysis.
library(tidyverse)
library("MASS")
library(GGally)
library(car) # contains the vif() and leveneTest() functions
library(gridExtra)
install.packages("gridExtra")
# Load here the libraries and packages you need for the rest of the analysis.
library(tidyverse)
library("MASS")
library(GGally)
library(car) # contains the vif() and leveneTest() functions
library(gridExtra)
library(cowplot)
install.packages("cowplot")
# Load here the libraries and packages you need for the rest of the analysis.
library(tidyverse)
library("MASS")
library(GGally)
library(car) # contains the vif() and leveneTest() functions
library(gridExtra)
library(cowplot)
# Loading data
DATA_FILE = "fishermen_mercury.csv" # Location of the data csv file
dataset = read.csv(DATA_FILE) # Loading the data
dataset$MeHg <- NULL # We are asked not to use the variable MeHg
dataset$LogTotHg <- log(dataset$TotHg)
dataset$logFishmlwk <- log(dataset$fishmlwk + 1)
#Converting categorical variables into factors
dataset$fisherman <- factor(dataset$fisherman)
dataset$fishpart <- factor(dataset$fishpart)
ggplot(dataset, aes(group=fisherman, y=TotHg, fill=fisherman)) + geom_boxplot() + labs(y = "Total Hg concentration in the hair (mg/g)") + scale_x_discrete() + scale_fill_discrete(name = "Population", labels = c("Control group", "Fishermen")) + theme_bw()
t.test(x=dataset[which(dataset$fisherman==1),]$TotHg, y=dataset[which(dataset$fisherman==0),]$TotHg, alternative = "greater", var.equal=FALSE)
table(dataset$fisherman, dataset$fishmlwk)
par(mfrow=c(1,3))
ggplot(dataset, aes(age, TotHg, colour = fisherman)) + geom_point() #+ scale_y_log10() + scale_x_log10() ##Uncomment for log scales
ggplot(dataset, aes(restime, TotHg, colour = fisherman)) + geom_point()
ggplot(dataset, aes(fishmlwk, TotHg, colour = fisherman)) + geom_boxplot()
#grid.arrange(plot1, plot2, plot3, ncol=3, nrow = 1)
hg.form.full = TotHg~ fisherman + age + restime + height + weight + fishmlwk + fishpart
#hg.form.full2 = TotHg~ (fisherman + age + restime + height + weight + fishpart)^2
#hg.form.full3 = TotHg~ (fisherman + age + restime + height + weight + fishpart)^3
vif(lm(hg.form.full,data=dataset))
#vif(lm(hg.form.full2,data=dataset))
#vif(lm(hg.form.full3,data=dataset))
hg.form.pre_selection=TotHg ~ fisherman + age + restime + height + weight + fishmlwk + fishpart + fisherman:(age + restime + height + weight + fishmlwk + fishpart)
fit <- lm(hg.form.pre_selection,data=dataset)
selection <- stepAIC(fit, direction="both")
selection$anova # display results
hg.form.custom = TotHg ~ fisherman + age + restime + height + weight + fishmlwk + fishpart +  fisherman:(age + restime + height + weight + fishmlwk + fishpart)
drop1(lm(hg.form.custom, data = dataset), test="F")
#>delete restime:fisherman
hg.form.custom = TotHg ~ fisherman + age + restime + height + weight + fishmlwk + fishpart +  fisherman:(age + height + weight + fishmlwk + fishpart)
drop1(lm(hg.form.custom, data = dataset), test="F")
#>delete fishpart:fisherman
hg.form.custom = TotHg ~ fisherman + age + restime + height + weight + fishmlwk + fishpart +  fisherman:(age + height + weight + fishmlwk)
drop1(lm(hg.form.custom, data = dataset), test="F")
#>delete height:fisherman
hg.form.custom = TotHg ~ fisherman + age + restime + height + weight + fishmlwk + fishpart +  fisherman:(age + weight + fishmlwk)
drop1(lm(hg.form.custom, data = dataset), test="F")
#>delete age:fisherman
hg.form.custom = TotHg ~ fisherman + age + restime + height + weight + fishmlwk + fishpart +  fisherman:(weight + fishmlwk)
drop1(lm(hg.form.custom, data = dataset), test="F")
#>delete fishpart
hg.form.custom = TotHg ~ fisherman + age + restime + height + weight + fishmlwk + fisherman:(weight + fishmlwk)
drop1(lm(hg.form.custom, data = dataset), test="F")
#>delete height
hg.form.custom = TotHg ~ fisherman + age + restime + weight + fishmlwk + fisherman:(weight + fishmlwk)
drop1(lm(hg.form.custom, data = dataset), test="F")
#>delete age
hg.form.custom = TotHg ~ fisherman + restime + weight + fishmlwk + fisherman:(weight + fishmlwk)
drop1(lm(hg.form.custom, data = dataset), test="F")
#>delete restime
hg.form.custom = TotHg ~ fisherman + weight + fishmlwk + fisherman:(weight + fishmlwk)
drop1(lm(hg.form.custom, data = dataset), test="F")
#>delete fisherman:weight
hg.form.custom = TotHg ~ fisherman + weight + fishmlwk + fisherman:fishmlwk
drop1(lm(hg.form.custom, data = dataset), test="F")
#>delete fisherman:fishmlwk
hg.form.custom = TotHg ~ fisherman + weight + fishmlwk
drop1(lm(hg.form.custom, data = dataset), test="F")
#>delete fisherman
hg.form.custom = TotHg ~ weight + fishmlwk
drop1(lm(hg.form.custom, data = dataset), test="F")
#>delete fisherman
hg.form.selected=TotHg ~ fisherman + weight + fishmlwk + fisherman:weight + fisherman:fishmlwk
hg.lm.selected.model=lm(hg.form.selected, data=dataset)
summary(hg.lm.selected.model)
# Load here the libraries and packages you need for the rest of the analysis.
library(tidyverse)
library("MASS")
library(GGally)
library(car) # contains the vif() and leveneTest() functions
library(gridExtra)
library(cowplot)
# Loading data
DATA_FILE = "fishermen_mercury.csv" # Location of the data csv file
dataset = read.csv(DATA_FILE) # Loading the data
dataset$MeHg <- NULL # We are asked not to use the variable MeHg
dataset$LogTotHg <- log(dataset$TotHg)
dataset$logFishmlwk <- log(dataset$fishmlwk + 1)
#Converting categorical variables into factors
dataset$fisherman <- factor(dataset$fisherman)
dataset$fishpart <- factor(dataset$fishpart)
ggplot(dataset, aes(group=fisherman, y=TotHg, fill=fisherman)) + geom_boxplot() + labs(y = "Total Hg concentration in the hair (mg/g)") + scale_x_discrete() + scale_fill_discrete(name = "Population", labels = c("Control group", "Fishermen")) + theme_bw()
t.test(x=dataset[which(dataset$fisherman==1),]$TotHg, y=dataset[which(dataset$fisherman==0),]$TotHg, alternative = "greater", var.equal=FALSE)
table(dataset$fisherman, dataset$fishmlwk)
par(mfrow=c(1,3))
ggplot(dataset, aes(age, TotHg, colour = fisherman)) + geom_point() #+ scale_y_log10() + scale_x_log10() ##Uncomment for log scales
ggplot(dataset, aes(restime, TotHg, colour = fisherman)) + geom_point()
ggplot(dataset, aes(fishmlwk, TotHg, colour = fisherman)) + geom_boxplot()
#grid.arrange(plot1, plot2, plot3, ncol=3, nrow = 1)
hg.form.full = TotHg~ fisherman + age + restime + height + weight + fishmlwk + fishpart
#hg.form.full2 = TotHg~ (fisherman + age + restime + height + weight + fishpart)^2
#hg.form.full3 = TotHg~ (fisherman + age + restime + height + weight + fishpart)^3
vif(lm(hg.form.full,data=dataset))
#vif(lm(hg.form.full2,data=dataset))
#vif(lm(hg.form.full3,data=dataset))
hg.form.pre_selection=TotHg ~ fisherman + age + restime + height + weight + fishmlwk + fishpart + fisherman:(age + restime + height + weight + fishmlwk + fishpart)
fit <- lm(hg.form.pre_selection,data=dataset)
selection <- stepAIC(fit, direction="both")
selection$anova # display results
hg.form.custom = TotHg ~ fisherman + age + restime + height + weight + fishmlwk + fishpart +  fisherman:(age + restime + height + weight + fishmlwk + fishpart)
drop1(lm(hg.form.custom, data = dataset), test="F")
#>delete restime:fisherman
hg.form.custom = TotHg ~ fisherman + age + restime + height + weight + fishmlwk + fishpart +  fisherman:(age + height + weight + fishmlwk + fishpart)
drop1(lm(hg.form.custom, data = dataset), test="F")
#>delete fishpart:fisherman
hg.form.custom = TotHg ~ fisherman + age + restime + height + weight + fishmlwk + fishpart +  fisherman:(age + height + weight + fishmlwk)
drop1(lm(hg.form.custom, data = dataset), test="F")
#>delete height:fisherman
hg.form.custom = TotHg ~ fisherman + age + restime + height + weight + fishmlwk + fishpart +  fisherman:(age + weight + fishmlwk)
drop1(lm(hg.form.custom, data = dataset), test="F")
#>delete age:fisherman
hg.form.custom = TotHg ~ fisherman + age + restime + height + weight + fishmlwk + fishpart +  fisherman:(weight + fishmlwk)
drop1(lm(hg.form.custom, data = dataset), test="F")
#>delete fishpart
hg.form.custom = TotHg ~ fisherman + age + restime + height + weight + fishmlwk + fisherman:(weight + fishmlwk)
drop1(lm(hg.form.custom, data = dataset), test="F")
#>delete height
hg.form.custom = TotHg ~ fisherman + age + restime + weight + fishmlwk + fisherman:(weight + fishmlwk)
drop1(lm(hg.form.custom, data = dataset), test="F")
#>delete age
hg.form.custom = TotHg ~ fisherman + restime + weight + fishmlwk + fisherman:(weight + fishmlwk)
drop1(lm(hg.form.custom, data = dataset), test="F")
#>delete restime
hg.form.custom = TotHg ~ fisherman + weight + fishmlwk + fisherman:(weight + fishmlwk)
drop1(lm(hg.form.custom, data = dataset), test="F")
#>delete fisherman:weight
hg.form.custom = TotHg ~ fisherman + weight + fishmlwk + fisherman:fishmlwk
drop1(lm(hg.form.custom, data = dataset), test="F")
#>delete fisherman:fishmlwk
hg.form.custom = TotHg ~ fisherman + weight + fishmlwk
drop1(lm(hg.form.custom, data = dataset), test="F")
#>delete fisherman
hg.form.custom = TotHg ~ weight + fishmlwk
drop1(lm(hg.form.custom, data = dataset), test="F")
#>delete fisherman
hg.form.selected=TotHg ~ fisherman + weight + fishmlwk + fisherman:weight + fisherman:fishmlwk
hg.lm.selected.model=lm(hg.form.selected, data=dataset)
summary(hg.lm.selected.model)
plot(hg.lm.selected.model, which=1) #residuals vs fitted
plot(hg.lm.selected.model, which=2) #QQ plot
plot(hg.lm.selected.model, which=3) #scale location
plot(hg.lm.selected.model, which=4) #cook's distance
plot(hg.lm.selected.model, which=5) #residuals vs leverage
plot(hg.lm.selected.model, which=6) #cook's distance vs leverage
install.packages("HMM")
library(HMM)
states <- c("S","N","I")
emissions <- c("C","G","A","T","-")
initProb <- c(1,0,0)
transProb <- matrix(c(0,0,0,1/2,89/90,0.1,1/2,1/90,0.9), 3)
emissionProb <- matrix(c(0,0.1,0.25,0,0.1,0.25,0,0.4,0.25,0,0.4,0.25,1,0,0), 3)
states <- c("S","N","I")
emissions <- c("C","G","A","T","-")
initProb <- c(1,0,0)
transProb <- matrix(c(0,0,0,1/2,89/90,0.1,1/2,1/90,0.9), 3)
emissionProb <- matrix(c(0,0.1,0.25,0,0.1,0.25,0,0.4,0.25,0,0.4,0.25,1,0,0), 3)
hmm <- initHMM(states, emissions, initProb, transProb, emissionProb)
hmm # prints a summary of the model
simulation <- simHMM(hmm,101)
simulation # prints the chosen hidden states and emissions sequences
logForwardProb <- forward(hmm, simulation$observation)
exp(logForwardProb)
logBackwardProb <- backward(hmm, simulation$observation)
exp(logBackwardProb)
observation <- c("-","A", "T", "A", "A", "A", "A", "T", "A", "A", "T", "T", "T", "T", "T","A", "T", "A", "A", "C", "T", "A", "T", "A", "T", "A", "T", "G", "T", "A", "C", "A","T", "A", "T", "T", "T", "T", "T", "A", "T", "T", "A", "A", "T", "T", "A", "G", "C","G", "C", "T", "T", "C", "C", "G", "A", "A", "C", "T", "A", "G", "G", "A", "G", "A","G", "C", "G", "T", "T", "T", "A", "T", "T", "T", "T", "T", "T", "T", "T", "A", "T","T", "T", "A", "A", "A", "A", "T", "A", "T", "A", "C", "T", "T", "A", "A", "A", "A", "A")
viterbi <- viterbi(hmm, observation)
viterbi
bw = baumWelch(hmm, observation, 10) # 10 iterations
print(bw$hmm)
# Load here the libraries and packages you need for the rest of the analysis.
library(tidyverse)
library("MASS")
library(GGally)
library(car) # contains the vif() and leveneTest() functions
library(gridExtra)
library(cowplot)
# Loading data
DATA_FILE = "fishermen_mercury.csv" # Location of the data csv file
dataset = read.csv(DATA_FILE) # Loading the data
dataset$MeHg <- NULL # We are asked not to use the variable MeHg
dataset$LogTotHg <- log(dataset$TotHg)
dataset$logFishmlwk <- log(dataset$fishmlwk + 1)
#Converting categorical variables into factors
dataset$fisherman <- factor(dataset$fisherman)
dataset$fishpart <- factor(dataset$fishpart)
ggplot(dataset, aes(group=fisherman, y=TotHg, fill=fisherman)) + geom_boxplot() + labs(y = "Total Hg concentration in the hair (mg/g)") + scale_x_discrete() + scale_fill_discrete(name = "Population", labels = c("Control group", "Fishermen")) + theme_bw()
t.test(x=dataset[which(dataset$fisherman==1),]$TotHg, y=dataset[which(dataset$fisherman==0),]$TotHg, alternative = "greater", var.equal=FALSE)
table(dataset$fisherman, dataset$fishmlwk)
par(mfrow=c(1,3))
ggplot(dataset, aes(age, TotHg, colour = fisherman)) + geom_point() #+ scale_y_log10() + scale_x_log10() ##Uncomment for log scales
ggplot(dataset, aes(restime, TotHg, colour = fisherman)) + geom_point()
ggplot(dataset, aes(fishmlwk, TotHg, colour = fisherman)) + geom_boxplot()
#grid.arrange(plot1, plot2, plot3, ncol=3, nrow = 1)
hg.form.full = TotHg~ fisherman + age + restime + height + weight + fishmlwk + fishpart
#hg.form.full2 = TotHg~ (fisherman + age + restime + height + weight + fishpart)^2
#hg.form.full3 = TotHg~ (fisherman + age + restime + height + weight + fishpart)^3
vif(lm(hg.form.full,data=dataset))
#vif(lm(hg.form.full2,data=dataset))
#vif(lm(hg.form.full3,data=dataset))
hg.form.step1 = TotHg ~ age + restime + height + weight + fishmlwk + fishpart
model1 <- stepAIC(lm(hg.form.step1,data=dataset), direction="both")
summary(model1)
hg.form.step2 = TotHg ~ fisherman:(age + restime + height + weight + fishmlwk + fishpart)
model2 <- stepAIC(lm(hg.form.step2,data=dataset), direction="both")
summary(model2)
hg.form.bwd = TotHg ~ fisherman:(age + restime + height + weight + fishmlwk + fishpart)
drop1(lm(hg.form.custom, data = dataset), test="F")
hg.form.bwd = TotHg ~ fisherman:(age + restime + height + weight + fishmlwk + fishpart)
drop1(lm(hg.form.bwd, data = dataset), test="F")
#> Delete fisherman:fishpart
hg.form.bwd = TotHg ~ fisherman:(age + restime + height + weight + fishmlwk)
drop1(lm(hg.form.bwd, data = dataset), test="F")
#> Delete fisherman:age
hg.form.bwd = TotHg ~ fisherman:(restime + height + weight + fishmlwk)
drop1(lm(hg.form.bwd, data = dataset), test="F")
#> Delete fisherman:restime
hg.form.bwd = TotHg ~ fisherman:(height + weight + fishmlwk)
drop1(lm(hg.form.bwd, data = dataset), test="F")
#> Delete fisherman:height
hg.form.bwd = TotHg ~ fisherman:(weight + fishmlwk)
drop1(lm(hg.form.bwd, data = dataset), test="F")
#> All parameters are significant (p-value < 0.05)
hg.form.fwd = TotHg ~ 1
add1(lm(hg.form.fwd, data=dataset), test="F", scope = ~ fisherman:(age + restime + height + weight + fishmlwk + fishpart))
#> Add fisherman:weight
hg.form.fwd = TotHg ~ fisherman:weight
add1(lm(hg.form.fwd, data=dataset), test="F", scope = ~ fisherman:(age + restime + height + weight + fishmlwk + fishpart))
#> Add fisherman:fishmlwk
hg.form.fwd = TotHg ~ fisherman:weight + fisherman:fishmlwk
add1(lm(hg.form.fwd, data=dataset), test="F", scope = ~ fisherman:(age + restime + height + weight + fishmlwk + fishpart))
#> No more significant (p-value < 0.05) parameter to add
hg.form.selected=TotHg ~ fisherman + weight + fishmlwk + fisherman:weight + fisherman:fishmlwk
hg.lm.selected.model=lm(hg.form.selected, data=dataset)
summary(hg.lm.selected.model)
plot(hg.lm.selected.model, which=1) #residuals vs fitted
plot(hg.lm.selected.model, which=2) #QQ plot
plot(hg.lm.selected.model, which=3) #scale location
plot(hg.lm.selected.model, which=4) #cook's distance
plot(hg.lm.selected.model, which=5) #residuals vs leverage
plot(hg.lm.selected.model, which=6) #cook's distance vs leverage
# Load here the libraries and packages you need for the rest of the analysis.
library(tidyverse)
library("MASS")
library(GGally)
library(car) # contains the vif() and leveneTest() functions
library(gridExtra)
library(cowplot)
# Loading data
DATA_FILE = "fishermen_mercury.csv" # Location of the data csv file
dataset = read.csv(DATA_FILE) # Loading the data
dataset$MeHg <- NULL # We are asked not to use the variable MeHg
dataset$LogTotHg <- log(dataset$TotHg)
dataset$logFishmlwk <- log(dataset$fishmlwk + 1)
#Converting categorical variables into factors
dataset$fisherman <- factor(dataset$fisherman)
dataset$fishpart <- factor(dataset$fishpart)
ggplot(dataset, aes(group=fisherman, y=TotHg, fill=fisherman)) + geom_boxplot() + labs(y = "Total Hg concentration in the hair (mg/g)") + scale_x_discrete() + scale_fill_discrete(name = "Population", labels = c("Control group", "Fishermen")) + theme_bw()
t.test(x=dataset[which(dataset$fisherman==1),]$TotHg, y=dataset[which(dataset$fisherman==0),]$TotHg, alternative = "greater", var.equal=FALSE)
as.data.frame(table(dataset$fisherman, dataset$fishmlwk))
table(dataset$fisherman, dataset$fishmlwk)
# Load here the libraries and packages you need for the rest of the analysis.
library(tidyverse)
library("MASS")
library(GGally)
library(car) # contains the vif() and leveneTest() functions
library(gridExtra)
library(cowplot)
# Loading data
DATA_FILE = "fishermen_mercury.csv" # Location of the data csv file
dataset = read.csv(DATA_FILE) # Loading the data
dataset$MeHg <- NULL # We are asked not to use the variable MeHg
dataset$LogTotHg <- log(dataset$TotHg)
dataset$logFishmlwk <- log(dataset$fishmlwk + 1)
#Converting categorical variables into factors
dataset$fisherman <- factor(dataset$fisherman)
dataset$fishpart <- factor(dataset$fishpart)
ggplot(dataset, aes(group=fisherman, y=TotHg, fill=fisherman)) + geom_boxplot() + labs(y = "Total Hg concentration in the hair (mg/g)") + scale_x_discrete() + scale_fill_discrete(name = "Population", labels = c("Control group", "Fishermen")) + theme_bw()
t.test(x=dataset[which(dataset$fisherman==1),]$TotHg, y=dataset[which(dataset$fisherman==0),]$TotHg, alternative = "greater", var.equal=FALSE)
table(dataset$fisherman, dataset$fishmlwk)
par(mfrow=c(1,3))
ggplot(dataset, aes(age, TotHg, colour = fisherman)) + geom_point() #+ scale_y_log10() + scale_x_log10() ##Uncomment for log scales
ggplot(dataset, aes(restime, TotHg, colour = fisherman)) + geom_point()
ggplot(dataset, aes(fishmlwk, TotHg, colour = fisherman)) + geom_boxplot()
#grid.arrange(plot1, plot2, plot3, ncol=3, nrow = 1)
hg.form.full = TotHg~ fisherman + age + restime + height + weight + fishmlwk + fishpart
#hg.form.full2 = TotHg~ (fisherman + age + restime + height + weight + fishpart)^2
#hg.form.full3 = TotHg~ (fisherman + age + restime + height + weight + fishpart)^3
vif(lm(hg.form.full,data=dataset))
#vif(lm(hg.form.full2,data=dataset))
#vif(lm(hg.form.full3,data=dataset))
hg.form.step1 = TotHg ~ age + restime + height + weight + fishmlwk + fishpart
model1 <- stepAIC(lm(hg.form.step1,data=dataset), direction="both")
summary(model1)
hg.form.step1 = TotHg ~ age + restime + height + weight + fishmlwk + fishpart
model1 <- stepAIC(lm(hg.form.step1,data=dataset), direction="both")
summary(model1)
hg.form.step1 = TotHg ~ age + restime + height + weight + fishmlwk + fishpart
model1 <- stepAIC(lm(hg.form.step1,data=dataset), direction="both")
#summary(model1)
# Load here the libraries and packages you need for the rest of the analysis.
library(tidyverse)
library("MASS")
library(GGally)
library(car) # contains the vif() and leveneTest() functions
library(gridExtra)
library(cowplot)
# Loading data
DATA_FILE = "fishermen_mercury.csv" # Location of the data csv file
dataset = read.csv(DATA_FILE) # Loading the data
dataset$MeHg <- NULL # We are asked not to use the variable MeHg
dataset$LogTotHg <- log(dataset$TotHg)
dataset$logFishmlwk <- log(dataset$fishmlwk + 1)
#Converting categorical variables into factors
dataset$fisherman <- factor(dataset$fisherman)
dataset$fishpart <- factor(dataset$fishpart)
ggplot(dataset, aes(group=fisherman, y=TotHg, fill=fisherman)) + geom_boxplot() + labs(y = "Total Hg concentration in the hair (mg/g)") + scale_x_discrete() + scale_fill_discrete(name = "Population", labels = c("Control group", "Fishermen")) + theme_bw()
t.test(x=dataset[which(dataset$fisherman==1),]$TotHg, y=dataset[which(dataset$fisherman==0),]$TotHg, alternative = "greater", var.equal=FALSE)
table(dataset$fisherman, dataset$fishmlwk)
par(mfrow=c(1,3))
ggplot(dataset, aes(age, TotHg, colour = fisherman)) + geom_point() #+ scale_y_log10() + scale_x_log10() ##Uncomment for log scales
ggplot(dataset, aes(restime, TotHg, colour = fisherman)) + geom_point()
ggplot(dataset, aes(fishmlwk, TotHg, colour = fisherman)) + geom_boxplot()
#grid.arrange(plot1, plot2, plot3, ncol=3, nrow = 1)
hg.form.full = TotHg~ fisherman + age + restime + height + weight + fishmlwk + fishpart
#hg.form.full2 = TotHg~ (fisherman + age + restime + height + weight + fishpart)^2
#hg.form.full3 = TotHg~ (fisherman + age + restime + height + weight + fishpart)^3
vif(lm(hg.form.full,data=dataset))
#vif(lm(hg.form.full2,data=dataset))
#vif(lm(hg.form.full3,data=dataset))
hg.form.step1 = TotHg ~ age + restime + height + weight + fishmlwk + fishpart
model1 <- stepAIC(lm(hg.form.step1,data=dataset), direction="both")
summary(model1)
hg.form.step2 = TotHg ~ fisherman:(age + restime + height + weight + fishmlwk + fishpart)
model2 <- stepAIC(lm(hg.form.step2,data=dataset), direction="both")
summary(model2)
hg.form.bwd = TotHg ~ fisherman:(age + restime + height + weight + fishmlwk + fishpart)
drop1(lm(hg.form.bwd, data = dataset), test="F")
#> Delete fisherman:fishpart
hg.form.bwd = TotHg ~ fisherman:(age + restime + height + weight + fishmlwk)
drop1(lm(hg.form.bwd, data = dataset), test="F")
#> Delete fisherman:age
hg.form.bwd = TotHg ~ fisherman:(restime + height + weight + fishmlwk)
drop1(lm(hg.form.bwd, data = dataset), test="F")
#> Delete fisherman:restime
hg.form.bwd = TotHg ~ fisherman:(height + weight + fishmlwk)
drop1(lm(hg.form.bwd, data = dataset), test="F")
#> Delete fisherman:height
hg.form.bwd = TotHg ~ fisherman:(weight + fishmlwk)
drop1(lm(hg.form.bwd, data = dataset), test="F")
#> All parameters are significant (p-value < 0.05)
hg.form.fwd = TotHg ~ 1
add1(lm(hg.form.fwd, data=dataset), test="F", scope = ~ fisherman:(age + restime + height + weight + fishmlwk + fishpart))
#> Add fisherman:weight
hg.form.fwd = TotHg ~ fisherman:weight
add1(lm(hg.form.fwd, data=dataset), test="F", scope = ~ fisherman:(age + restime + height + weight + fishmlwk + fishpart))
#> Add fisherman:fishmlwk
hg.form.fwd = TotHg ~ fisherman:weight + fisherman:fishmlwk
add1(lm(hg.form.fwd, data=dataset), test="F", scope = ~ fisherman:(age + restime + height + weight + fishmlwk + fishpart))
#> No more significant (p-value < 0.05) parameter to add
hg.form.selected=TotHg ~  - 1 + fisherman + fisherman:(weight + fishmlwk)
hg.lm.selected.model=lm(hg.form.selected, data=dataset)
hg.lm.selected.summary <- summary(hg.lm.selected.model)
hg.form.selected=TotHg ~  - 1 + fisherman + fisherman:(weight + fishmlwk)
hg.lm.selected.model=lm(hg.form.selected, data=dataset)
hg.lm.selected.summary <- summary(hg.lm.selected.model)
hg.lm.selected.summary
library(ggplot2)
plot(hg.lm.selected.model, which=1) #residuals vs fitted
qplot(hg.lm.selected.model$fitted.values, hg.lm.selected.model$residuals, colour=dataset$fisherman, xlab = "fitted values", ylab = "residuals") + labs(colour = 'fisherman')
plot(hg.lm.selected.model, which=2) #QQ plot
plot(hg.lm.selected.model, which=3) #scale location
plot(hg.lm.selected.model, which=4) #cook's distance
plot(hg.lm.selected.model, which=5) #residuals vs leverage
plot(hg.lm.selected.model, which=6) #cook's distance vs leverage
