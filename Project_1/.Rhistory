library(kableExtra)
library(plyr)
# Loading data
DATA_FILE = "fishermen_mercury.csv" # Location of the data csv file
dataset = read.csv(DATA_FILE) # Loading the data
dataset$MeHg <- NULL # We are asked not to use the variable MeHg
dataset.unfactored = read.csv(DATA_FILE) # Loading the data
dataset.unfactored$MeHg <- NULL # We are asked not to use the variable MeHg
#Converting categorical variables into factors
#dataset$fisherman <- factor(dataset$fisherman)
dataset$fishpart <- factor(dataset$fishpart)
defOut <- knitr::knit_hooks$get("plot")  # save the default plot hook
knitr::knit_hooks$set(plot = function(x, options) {  # set new plot hook ...
x <- defOut(x, options)  # first apply the default hook
if(!is.null(options$wrapfigure)) {  # then, if option wrapfigure is given ...
# create the new opening string for the wrapfigure environment ...
wf <- sprintf("\\begin{wrapfigure}{%s}{%g\\textwidth}", options$wrapfigure[[1]], options$wrapfigure[[2]])
x  <- gsub("\\begin{figure}", wf, x, fixed = T)  # and replace the default one with it.
x  <- gsub("{figure}", "{wrapfigure}", x, fixed = T)  # also replace the environment ending
}
return(x)
})
t.test(x=dataset[which(dataset$fisherman==1),]$TotHg, y=dataset[which(dataset$fisherman==0),]$TotHg, alternative = "greater", var.equal=FALSE)
#, out.width = ".7\\textwidth"
ggplot(dataset, aes(group=fisherman, y=TotHg, fill=fisherman)) + geom_boxplot() + labs(y = "Total Hg concentration in the hair (mg/g)") + scale_x_discrete() + scale_fill_discrete(name = "Population", labels = c("Control group", "Fishermen")) + theme_bw()
# Loading data
DATA_FILE = "fishermen_mercury.csv" # Location of the data csv file
dataset = read.csv(DATA_FILE) # Loading the data
dataset$MeHg <- NULL # We are asked not to use the variable MeHg
dataset.unfactored = read.csv(DATA_FILE) # Loading the data
dataset.unfactored$MeHg <- NULL # We are asked not to use the variable MeHg
#Converting categorical variables into factors
dataset$fisherman <- integer(dataset$fisherman)
dataset$fisherman
# Loading data
DATA_FILE = "fishermen_mercury.csv" # Location of the data csv file
dataset = read.csv(DATA_FILE) # Loading the data
dataset$MeHg <- NULL # We are asked not to use the variable MeHg
dataset.unfactored = read.csv(DATA_FILE) # Loading the data
dataset.unfactored$MeHg <- NULL # We are asked not to use the variable MeHg
#Converting categorical variables into factors
#dataset$fisherman <- factor(dataset$fisherman)
dataset$fishpart <- factor(dataset$fishpart)
defOut <- knitr::knit_hooks$get("plot")  # save the default plot hook
knitr::knit_hooks$set(plot = function(x, options) {  # set new plot hook ...
x <- defOut(x, options)  # first apply the default hook
if(!is.null(options$wrapfigure)) {  # then, if option wrapfigure is given ...
# create the new opening string for the wrapfigure environment ...
wf <- sprintf("\\begin{wrapfigure}{%s}{%g\\textwidth}", options$wrapfigure[[1]], options$wrapfigure[[2]])
x  <- gsub("\\begin{figure}", wf, x, fixed = T)  # and replace the default one with it.
x  <- gsub("{figure}", "{wrapfigure}", x, fixed = T)  # also replace the environment ending
}
return(x)
})
t.test(x=dataset[which(dataset$fisherman==1),]$TotHg, y=dataset[which(dataset$fisherman==0),]$TotHg, alternative = "greater", var.equal=FALSE)
#, out.width = ".7\\textwidth"
ggplot(dataset, aes(group=fisherman, y=TotHg, fill=fisherman)) + geom_boxplot() + labs(y = "Total Hg concentration in the hair (mg/g)") + scale_x_discrete() + scale_fill_discrete(name = "Population", labels = c("Control group", "Fishermen")) + theme_bw()
#, out.width = ".7\\textwidth"
ggplot(dataset, aes(group=as.factor(fisherman), y=TotHg, fill=as.factor(fisherman))) + geom_boxplot() + labs(y = "Total Hg concentration in the hair (mg/g)") + scale_x_discrete() + scale_fill_discrete(name = "Population", labels = c("Control group", "Fishermen")) + theme_bw()
data.table = table(dataset$fisherman, dataset$fishmlwk)
row.names(data.table) <- c("non-fisherman", "fisherman")
kable(data.table, format = "latex", booktabs = T, caption = "\\label{tbl:fishmlwk}Distribution of the number of fish meals accross fishermen and non-fishermen populations") %>%
kable_styling(latex_options = "striped")
kable(cor(dataset.unfactored), format = "latex", digits = 2, caption = "\\label{tbl:correlation}Correlation matrix")%>%
kable_styling(latex_options = "striped")
plot(dataset)
par(mfrow=c(1,3))
ggplot(dataset, aes(age, TotHg, colour = fisherman)) + geom_point() #+ scale_y_log10() + scale_x_log10() ##Uncomment for log scales
ggplot(dataset, aes(restime, TotHg, colour = fisherman)) + geom_point()
ggplot(dataset, aes(fishmlwk, TotHg, colour = fisherman)) + geom_boxplot()
#grid.arrange(plot1, plot2, plot3, ncol=3, nrow = 1)
hg.form.full = TotHg~ fisherman + age + restime + height + weight + fishmlwk + fishpart
#hg.form.full2 = TotHg~ (fisherman + age + restime + height + weight + fishpart)^2
#hg.form.full3 = TotHg~ (fisherman + age + restime + height + weight + fishpart)^3
vif(lm(hg.form.full,data=dataset))
#vif(lm(hg.form.full2,data=dataset))
#vif(lm(hg.form.full3,data=dataset))
hg.form.step1 = TotHg ~ fisherman + age + restime + height + weight + fishmlwk + fishpart
model1 <- stepAIC(lm(hg.form.step1,data=dataset), direction="both")
tbl <- summary(model1)$coefficients
n <- nrow(tbl)
tbl.formatted <- as.matrix(tbl)
# Formatting each column
tbl.formatted[1:n, 1:3] <- format(tbl[1:n, 1:3], digits = 1)
tbl.formatted[1:n, 4] <- format(tbl[1:n, 4], digits = 2, scientific = T)
kable(tbl.formatted, caption = "Full model regression results") %>%
kable_styling(latex_options = "striped")
hg.form.step2 = TotHg ~ fisherman + fisherman:(age + restime + height + weight + fishmlwk + fishpart)
model2 <- stepAIC(lm(hg.form.step2,data=dataset), direction="both")
tbl <- summary(model2)$coefficients
n <- nrow(tbl)
tbl.formatted <- as.matrix(tbl)
# Formatting each column
tbl.formatted[1:n, 1:3] <- format(tbl[1:n, 1:3], digits = 1)
tbl.formatted[1:n, 4] <- format(tbl[1:n, 4], digits = 2, scientific = T)
kable(tbl.formatted, caption = "Model regression results") %>%
kable_styling(latex_options = "striped")
hg.form.step1 = TotHg ~ fisherman + age + restime + height + weight + fishmlwk + fishpart
model1 <- stepAIC(lm(hg.form.step1,data=dataset), direction="both")
tbl <- summary(model1)$coefficients
n <- nrow(tbl)
tbl.formatted <- as.matrix(tbl)
# Formatting each column
tbl.formatted[1:n, 1:3] <- format(tbl[1:n, 1:3], digits = 1)
tbl.formatted[1:n, 4] <- format(tbl[1:n, 4], digits = 2, scientific = T)
kable(tbl.formatted, caption = "Full model regression results") %>%
kable_styling(latex_options = "striped")
hg.form.step2 = TotHg ~ fisherman + fisherman:(age + restime + height + weight + fishmlwk + fishpart)
model2 <- stepAIC(lm(hg.form.step2,data=dataset), direction="both")
tbl <- summary(model2)$coefficients
n <- nrow(tbl)
tbl.formatted <- as.matrix(tbl)
# Formatting each column
tbl.formatted[1:n, 1:3] <- format(tbl[1:n, 1:3], digits = 1)
tbl.formatted[1:n, 4] <- format(tbl[1:n, 4], digits = 2, scientific = T)
kable(tbl.formatted, caption = "Model regression results") %>%
kable_styling(latex_options = "striped")
hg.form.bwd = TotHg ~ fisherman + fisherman:(age + restime + height + weight + fishmlwk + fishpart) - 1
drop1(lm(hg.form.bwd, data = dataset), test="F")
#> Delete fisherman:fishpart
hg.form.bwd = TotHg ~ fisherman + fisherman:(age + restime + height + weight + fishmlwk) - 1
drop1(lm(hg.form.bwd, data = dataset), test="F")
#> Delete fisherman:age
hg.form.bwd = TotHg ~ fisherman + fisherman:(restime + height + weight + fishmlwk) - 1
drop1(lm(hg.form.bwd, data = dataset), test="F")
#> Delete fisherman:restime
hg.form.bwd = TotHg ~ fisherman + fisherman:(height + weight + fishmlwk) - 1
drop1(lm(hg.form.bwd, data = dataset), test="F")
#> Delete fisherman:height
hg.form.bwd = TotHg ~ fisherman + fisherman:(weight + fishmlwk) - 1
drop1(lm(hg.form.bwd, data = dataset), test="F")
#> All parameters are significant (p-value < 0.05)
hg.form.fwd = TotHg ~ fisherman - 1
add1(lm(hg.form.fwd, data=dataset), test="F", scope = ~ fisherman + fisherman:(age + restime + height + weight + fishmlwk + fishpart) - 1)
#> Add fisherman:weight
hg.form.fwd = TotHg ~ fisherman + fisherman:weight - 1
add1(lm(hg.form.fwd, data=dataset), test="F", scope = ~ fisherman + fisherman:(age + restime + height + weight + fishmlwk + fishpart) - 1)
#> Add fisherman:fishmlwk
hg.form.fwd = TotHg ~ fisherman + fisherman:weight + fisherman:fishmlwk - 1
add1(lm(hg.form.fwd, data=dataset), test="F", scope = ~ fisherman + fisherman:(age + restime + height + weight + fishmlwk + fishpart) - 1)
#> No more significant (p-value < 0.05) parameter to add
hg.form.selected=TotHg ~  fisherman + fisherman:(weight + fishmlwk)
hg.lm.selected.model=lm(hg.form.selected, data=dataset)
hg.lm.selected.summary <- summary(hg.lm.selected.model)
hg.lm.selected.summary$coefficients
library(ggplot2)
# plot(hg.lm.selected.model, which=1) #residuals vs fitted
qplot(hg.lm.selected.model$fitted.values, hg.lm.selected.model$residuals, colour=revalue(dataset$fisherman, c("0"="non-fisherman", "1"="fisherman")), xlab = "fitted values", ylab = "residuals") +
labs(colour = '') +
theme(legend.position="bottom")
library(ggplot2)
# plot(hg.lm.selected.model, which=1) #residuals vs fitted
qplot(hg.lm.selected.model$fitted.values, hg.lm.selected.model$residuals, colour=revalue(dataset$fisherman, c(0="non-fisherman", 1="fisherman")), xlab = "fitted values", ylab = "residuals") +
library(ggplot2)
# plot(hg.lm.selected.model, which=1) #residuals vs fitted
qplot(hg.lm.selected.model$fitted.values, hg.lm.selected.model$residuals, colour=revalue(as.factor(dataset$fisherman), c("0"="non-fisherman", "1"="fisherman")), xlab = "fitted values", ylab = "residuals") +
labs(colour = '') +
theme(legend.position="bottom")
plot(hg.lm.selected.model, which=2, xlab = "Theoretical quantiles")#QQ plot
hg.form.selected=TotHg ~  fisherman + fisherman:(weight + fishmlwk)
hg.lm.selected.model=lm(hg.form.selected, data=dataset)
hg.lm.selected.summary <- summary(hg.lm.selected.model)
hg.lm.selected.summary$coefficients
hg.form.selected=TotHg ~  fisherman + fisherman:(weight + fishmlwk)
hg.lm.selected.model=lm(hg.form.selected, data=dataset)
hg.lm.selected.summary <- summary(hg.lm.selected.model)
hg.lm.selected.summary$coefficients
hg.form.selected=TotHg ~  fisherman + fisherman:(weight + fishmlwk)
hg.lm.selected.model=lm(hg.form.selected, data=dataset)
hg.lm.selected.summary <- summary(hg.lm.selected.model)
hg.lm.selected.summary$coefficients
# Load here the libraries and packages you need for the rest of the analysis.
library(tidyverse)
install.packages(tidyverse)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("tidyverse")
# Load here the libraries and packages you need for the rest of the analysis.
library(tidyverse)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("colorspace")
# Load here the libraries and packages you need for the rest of the analysis.
library(tidyverse)
library("MASS")
library(GGally)
library(car) # contains the vif() and leveneTest() functions
library(gridExtra)
library(cowplot)
library(knitr)
library(kableExtra)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("kableExtra")
# Load here the libraries and packages you need for the rest of the analysis.
library(tidyverse)
library("MASS")
library(GGally)
library(car) # contains the vif() and leveneTest() functions
library(gridExtra)
library(cowplot)
library(knitr)
library(kableExtra)
library(plyr)
# Loading data
DATA_FILE = "fishermen_mercury.csv" # Location of the data csv file
dataset = read.csv(DATA_FILE) # Loading the data
dataset$MeHg <- NULL # We are asked not to use the variable MeHg
dataset.unfactored = read.csv(DATA_FILE) # Loading the data
dataset.unfactored$MeHg <- NULL # We are asked not to use the variable MeHg
#Converting categorical variables into factors
#dataset$fisherman <- factor(dataset$fisherman)
dataset$fishpart <- factor(dataset$fishpart)
defOut <- knitr::knit_hooks$get("plot")  # save the default plot hook
knitr::knit_hooks$set(plot = function(x, options) {  # set new plot hook ...
x <- defOut(x, options)  # first apply the default hook
if(!is.null(options$wrapfigure)) {  # then, if option wrapfigure is given ...
# create the new opening string for the wrapfigure environment ...
wf <- sprintf("\\begin{wrapfigure}{%s}{%g\\textwidth}", options$wrapfigure[[1]], options$wrapfigure[[2]])
x  <- gsub("\\begin{figure}", wf, x, fixed = T)  # and replace the default one with it.
x  <- gsub("{figure}", "{wrapfigure}", x, fixed = T)  # also replace the environment ending
}
return(x)
})
t.test(x=dataset[which(dataset$fisherman==1),]$TotHg, y=dataset[which(dataset$fisherman==0),]$TotHg, alternative = "greater", var.equal=FALSE)
#, out.width = ".7\\textwidth"
ggplot(dataset, aes(group=as.factor(fisherman), y=TotHg, fill=as.factor(fisherman))) + geom_boxplot() + labs(y = "Total Hg concentration in the hair (mg/g)") + scale_x_discrete() + scale_fill_discrete(name = "Population", labels = c("Control group", "Fishermen")) + theme_bw()
data.table = table(dataset$fisherman, dataset$fishmlwk)
row.names(data.table) <- c("non-fisherman", "fisherman")
kable(data.table, format = "latex", booktabs = T, caption = "\\label{tbl:fishmlwk}Distribution of the number of fish meals accross fishermen and non-fishermen populations") %>%
kable_styling(latex_options = "striped")
kable(cor(dataset.unfactored), format = "latex", digits = 2, caption = "\\label{tbl:correlation}Correlation matrix")%>%
kable_styling(latex_options = "striped")
plot(dataset)
par(mfrow=c(1,3))
ggplot(dataset, aes(age, TotHg, colour = fisherman)) + geom_point() #+ scale_y_log10() + scale_x_log10() ##Uncomment for log scales
ggplot(dataset, aes(restime, TotHg, colour = fisherman)) + geom_point()
ggplot(dataset, aes(fishmlwk, TotHg, colour = fisherman)) + geom_boxplot()
#grid.arrange(plot1, plot2, plot3, ncol=3, nrow = 1)
hg.form.full = TotHg~ fisherman + age + restime + height + weight + fishmlwk + fishpart
#hg.form.full2 = TotHg~ (fisherman + age + restime + height + weight + fishpart)^2
#hg.form.full3 = TotHg~ (fisherman + age + restime + height + weight + fishpart)^3
vif(lm(hg.form.full,data=dataset))
#vif(lm(hg.form.full2,data=dataset))
#vif(lm(hg.form.full3,data=dataset))
hg.form.step1 = TotHg ~ fisherman + age + restime + height + weight + fishmlwk + fishpart
model1 <- stepAIC(lm(hg.form.step1,data=dataset), direction="both")
tbl <- summary(model1)$coefficients
n <- nrow(tbl)
tbl.formatted <- as.matrix(tbl)
# Formatting each column
tbl.formatted[1:n, 1:3] <- format(tbl[1:n, 1:3], digits = 1)
tbl.formatted[1:n, 4] <- format(tbl[1:n, 4], digits = 2, scientific = T)
kable(tbl.formatted, caption = "Full model regression results") %>%
kable_styling(latex_options = "striped")
hg.form.step2 = TotHg ~ fisherman + fisherman:(age + restime + height + weight + fishmlwk + fishpart)
model2 <- stepAIC(lm(hg.form.step2,data=dataset), direction="both")
tbl <- summary(model2)$coefficients
n <- nrow(tbl)
tbl.formatted <- as.matrix(tbl)
# Formatting each column
tbl.formatted[1:n, 1:3] <- format(tbl[1:n, 1:3], digits = 1)
tbl.formatted[1:n, 4] <- format(tbl[1:n, 4], digits = 2, scientific = T)
kable(tbl.formatted, caption = "Model regression results") %>%
kable_styling(latex_options = "striped")
hg.form.bwd = TotHg ~ fisherman + fisherman:(age + restime + height + weight + fishmlwk + fishpart) - 1
drop1(lm(hg.form.bwd, data = dataset), test="F")
#> Delete fisherman:fishpart
hg.form.bwd = TotHg ~ fisherman + fisherman:(age + restime + height + weight + fishmlwk) - 1
drop1(lm(hg.form.bwd, data = dataset), test="F")
#> Delete fisherman:age
hg.form.bwd = TotHg ~ fisherman + fisherman:(restime + height + weight + fishmlwk) - 1
drop1(lm(hg.form.bwd, data = dataset), test="F")
#> Delete fisherman:restime
hg.form.bwd = TotHg ~ fisherman + fisherman:(height + weight + fishmlwk) - 1
drop1(lm(hg.form.bwd, data = dataset), test="F")
#> Delete fisherman:height
hg.form.bwd = TotHg ~ fisherman + fisherman:(weight + fishmlwk) - 1
drop1(lm(hg.form.bwd, data = dataset), test="F")
#> All parameters are significant (p-value < 0.05)
hg.form.fwd = TotHg ~ fisherman - 1
add1(lm(hg.form.fwd, data=dataset), test="F", scope = ~ fisherman + fisherman:(age + restime + height + weight + fishmlwk + fishpart) - 1)
#> Add fisherman:weight
hg.form.fwd = TotHg ~ fisherman + fisherman:weight - 1
add1(lm(hg.form.fwd, data=dataset), test="F", scope = ~ fisherman + fisherman:(age + restime + height + weight + fishmlwk + fishpart) - 1)
#> Add fisherman:fishmlwk
hg.form.fwd = TotHg ~ fisherman + fisherman:weight + fisherman:fishmlwk - 1
add1(lm(hg.form.fwd, data=dataset), test="F", scope = ~ fisherman + fisherman:(age + restime + height + weight + fishmlwk + fishpart) - 1)
#> No more significant (p-value < 0.05) parameter to add
hg.form.selected=TotHg ~  fisherman + fisherman:(weight + fishmlwk)
hg.lm.selected.model=lm(hg.form.selected, data=dataset)
hg.lm.selected.summary <- summary(hg.lm.selected.model)
hg.lm.selected.summary$coefficients
library(ggplot2)
# plot(hg.lm.selected.model, which=1) #residuals vs fitted
qplot(hg.lm.selected.model$fitted.values, hg.lm.selected.model$residuals, colour=revalue(as.factor(dataset$fisherman), c("0"="non-fisherman", "1"="fisherman")), xlab = "fitted values", ylab = "residuals") +
labs(colour = '') +
theme(legend.position="bottom")
plot(hg.lm.selected.model, which=2, xlab = "Theoretical quantiles")#QQ plot
View(dataset)
plot (dataset$weight[which(dataset$fisherman==1),])
plot(dataset$fisherman,dataset$weight)
# Load here the libraries and packages you need for the rest of the analysis.
library(tidyverse)
library("MASS")
library(GGally)
library(car) # contains the vif() and leveneTest() functions
library(gridExtra)
library(cowplot)
library(knitr)
library(kableExtra)
library(plyr)
# Loading data
DATA_FILE = "fishermen_mercury.csv" # Location of the data csv file
dataset = read.csv(DATA_FILE) # Loading the data
dataset$MeHg <- NULL # We are asked not to use the variable MeHg
dataset.unfactored = read.csv(DATA_FILE) # Loading the data
dataset.unfactored$MeHg <- NULL # We are asked not to use the variable MeHg
#Converting categorical variables into factors
#dataset$fisherman <- factor(dataset$fisherman)
dataset$fishpart <- factor(dataset$fishpart)
defOut <- knitr::knit_hooks$get("plot")  # save the default plot hook
knitr::knit_hooks$set(plot = function(x, options) {  # set new plot hook ...
x <- defOut(x, options)  # first apply the default hook
if(!is.null(options$wrapfigure)) {  # then, if option wrapfigure is given ...
# create the new opening string for the wrapfigure environment ...
wf <- sprintf("\\begin{wrapfigure}{%s}{%g\\textwidth}", options$wrapfigure[[1]], options$wrapfigure[[2]])
x  <- gsub("\\begin{figure}", wf, x, fixed = T)  # and replace the default one with it.
x  <- gsub("{figure}", "{wrapfigure}", x, fixed = T)  # also replace the environment ending
}
return(x)
})
t.test(x=dataset[which(dataset$fisherman==1),]$TotHg, y=dataset[which(dataset$fisherman==0),]$TotHg, alternative = "greater", var.equal=FALSE)
#, out.width = ".7\\textwidth"
ggplot(dataset, aes(group=as.factor(fisherman), y=TotHg, fill=as.factor(fisherman))) + geom_boxplot() + labs(y = "Total Hg concentration in the hair (mg/g)") + scale_x_discrete() + scale_fill_discrete(name = "Population", labels = c("Control group", "Fishermen")) + theme_bw()
data.table = table(dataset$fisherman, dataset$fishmlwk)
row.names(data.table) <- c("non-fisherman", "fisherman")
kable(data.table, format = "latex", booktabs = T, caption = "\\label{tbl:fishmlwk}Distribution of the number of fish meals accross fishermen and non-fishermen populations") %>%
kable_styling(latex_options = "striped")
kable(cor(dataset.unfactored), format = "latex", digits = 2, caption = "\\label{tbl:correlation}Correlation matrix")%>%
kable_styling(latex_options = "striped")
plot(dataset)
par(mfrow=c(1,3))
ggplot(dataset, aes(age, TotHg, colour = fisherman)) + geom_point() #+ scale_y_log10() + scale_x_log10() ##Uncomment for log scales
ggplot(dataset, aes(restime, TotHg, colour = fisherman)) + geom_point()
ggplot(dataset, aes(fishmlwk, TotHg, colour = fisherman)) + geom_boxplot()
#grid.arrange(plot1, plot2, plot3, ncol=3, nrow = 1)
hg.form.full = TotHg~ fisherman + age + restime + height + weight + fishmlwk + fishpart
#hg.form.full2 = TotHg~ (fisherman + age + restime + height + weight + fishpart)^2
#hg.form.full3 = TotHg~ (fisherman + age + restime + height + weight + fishpart)^3
vif(lm(hg.form.full,data=dataset))
#vif(lm(hg.form.full2,data=dataset))
#vif(lm(hg.form.full3,data=dataset))
hg.form.step1 = TotHg ~ fisherman + age + restime + height + weight + fishmlwk + fishpart
model1 <- stepAIC(lm(hg.form.step1,data=dataset), direction="both")
tbl <- summary(model1)$coefficients
n <- nrow(tbl)
tbl.formatted <- as.matrix(tbl)
# Formatting each column
tbl.formatted[1:n, 1:3] <- format(tbl[1:n, 1:3], digits = 1)
tbl.formatted[1:n, 4] <- format(tbl[1:n, 4], digits = 2, scientific = T)
kable(tbl.formatted, caption = "Full model regression results") %>%
kable_styling(latex_options = "striped")
hg.form.step2 = TotHg ~ fisherman + fisherman:(age + restime + height + weight + fishmlwk + fishpart)
model2 <- stepAIC(lm(hg.form.step2,data=dataset), direction="both")
tbl <- summary(model2)$coefficients
n <- nrow(tbl)
tbl.formatted <- as.matrix(tbl)
# Formatting each column
tbl.formatted[1:n, 1:3] <- format(tbl[1:n, 1:3], digits = 1)
tbl.formatted[1:n, 4] <- format(tbl[1:n, 4], digits = 2, scientific = T)
kable(tbl.formatted, caption = "Model regression results") %>%
kable_styling(latex_options = "striped")
hg.form.bwd = TotHg ~ fisherman + fisherman:(age + restime + height + weight + fishmlwk + fishpart) - 1
drop1(lm(hg.form.bwd, data = dataset), test="F")
#> Delete fisherman:fishpart
hg.form.bwd = TotHg ~ fisherman + fisherman:(age + restime + height + weight + fishmlwk) - 1
drop1(lm(hg.form.bwd, data = dataset), test="F")
#> Delete fisherman:age
hg.form.bwd = TotHg ~ fisherman + fisherman:(restime + height + weight + fishmlwk) - 1
drop1(lm(hg.form.bwd, data = dataset), test="F")
#> Delete fisherman:restime
hg.form.bwd = TotHg ~ fisherman + fisherman:(height + weight + fishmlwk) - 1
drop1(lm(hg.form.bwd, data = dataset), test="F")
#> Delete fisherman:height
hg.form.bwd = TotHg ~ fisherman + fisherman:(weight + fishmlwk) - 1
drop1(lm(hg.form.bwd, data = dataset), test="F")
#> All parameters are significant (p-value < 0.05)
hg.form.fwd = TotHg ~ fisherman - 1
add1(lm(hg.form.fwd, data=dataset), test="F", scope = ~ fisherman + fisherman:(age + restime + height + weight + fishmlwk + fishpart) - 1)
#> Add fisherman:weight
hg.form.fwd = TotHg ~ fisherman + fisherman:weight - 1
add1(lm(hg.form.fwd, data=dataset), test="F", scope = ~ fisherman + fisherman:(age + restime + height + weight + fishmlwk + fishpart) - 1)
#> Add fisherman:fishmlwk
hg.form.fwd = TotHg ~ fisherman + fisherman:weight + fisherman:fishmlwk - 1
add1(lm(hg.form.fwd, data=dataset), test="F", scope = ~ fisherman + fisherman:(age + restime + height + weight + fishmlwk + fishpart) - 1)
#> No more significant (p-value < 0.05) parameter to add
hg.form.selected=TotHg ~  fisherman + fisherman:(weight + fishmlwk)
hg.lm.selected.model=lm(hg.form.selected, data=dataset)
hg.lm.selected.summary <- summary(hg.lm.selected.model)
hg.lm.selected.summary$coefficients
library(ggplot2)
# plot(hg.lm.selected.model, which=1) #residuals vs fitted
qplot(hg.lm.selected.model$fitted.values, hg.lm.selected.model$residuals, colour=revalue(as.factor(dataset$fisherman), c("0"="non-fisherman", "1"="fisherman")), xlab = "fitted values", ylab = "residuals") +
labs(colour = '') +
theme(legend.position="bottom")
plot(hg.lm.selected.model, which=2, xlab = "Theoretical quantiles")#QQ plot
# Load here the libraries and packages you need for the rest of the analysis.
library(tidyverse)
library("MASS")
library(GGally)
library(car) # contains the vif() and leveneTest() functions
library(gridExtra)
library(cowplot)
library(knitr)
library(kableExtra)
library(plyr)
# Loading data
DATA_FILE = "fishermen_mercury.csv" # Location of the data csv file
dataset = read.csv(DATA_FILE) # Loading the data
dataset$MeHg <- NULL # We are asked not to use the variable MeHg
dataset.unfactored = read.csv(DATA_FILE) # Loading the data
dataset.unfactored$MeHg <- NULL # We are asked not to use the variable MeHg
#Converting categorical variables into factors
#dataset$fisherman <- factor(dataset$fisherman)
dataset$fishpart <- factor(dataset$fishpart)
defOut <- knitr::knit_hooks$get("plot")  # save the default plot hook
knitr::knit_hooks$set(plot = function(x, options) {  # set new plot hook ...
x <- defOut(x, options)  # first apply the default hook
if(!is.null(options$wrapfigure)) {  # then, if option wrapfigure is given ...
# create the new opening string for the wrapfigure environment ...
wf <- sprintf("\\begin{wrapfigure}{%s}{%g\\textwidth}", options$wrapfigure[[1]], options$wrapfigure[[2]])
x  <- gsub("\\begin{figure}", wf, x, fixed = T)  # and replace the default one with it.
x  <- gsub("{figure}", "{wrapfigure}", x, fixed = T)  # also replace the environment ending
}
return(x)
})
t.test(x=dataset[which(dataset$fisherman==1),]$TotHg, y=dataset[which(dataset$fisherman==0),]$TotHg, alternative = "greater", var.equal=FALSE)
#, out.width = ".7\\textwidth"
ggplot(dataset, aes(group=as.factor(fisherman), y=TotHg, fill=as.factor(fisherman))) + geom_boxplot() + labs(y = "Total Hg concentration in the hair (mg/g)") + scale_x_discrete() + scale_fill_discrete(name = "Population", labels = c("Control group", "Fishermen")) + theme_bw()
data.table = table(dataset$fisherman, dataset$fishmlwk)
row.names(data.table) <- c("non-fisherman", "fisherman")
kable(data.table, format = "latex", booktabs = T, caption = "\\label{tbl:fishmlwk}Distribution of the number of fish meals accross fishermen and non-fishermen populations") %>%
kable_styling(latex_options = "striped")
kable(cor(dataset.unfactored), format = "latex", digits = 2, caption = "\\label{tbl:correlation}Correlation matrix")%>%
kable_styling(latex_options = "striped")
plot(dataset)
par(mfrow=c(1,3))
ggplot(dataset, aes(age, TotHg, colour = fisherman)) + geom_point() #+ scale_y_log10() + scale_x_log10() ##Uncomment for log scales
ggplot(dataset, aes(restime, TotHg, colour = fisherman)) + geom_point()
ggplot(dataset, aes(fishmlwk, TotHg, colour = fisherman)) + geom_boxplot()
#grid.arrange(plot1, plot2, plot3, ncol=3, nrow = 1)
hg.form.full = TotHg~ fisherman + age + restime + height + weight + fishmlwk + fishpart
#hg.form.full2 = TotHg~ (fisherman + age + restime + height + weight + fishpart)^2
#hg.form.full3 = TotHg~ (fisherman + age + restime + height + weight + fishpart)^3
vif(lm(hg.form.full,data=dataset))
#vif(lm(hg.form.full2,data=dataset))
#vif(lm(hg.form.full3,data=dataset))
hg.form.step1 = TotHg ~ fisherman + age + restime + height + weight + fishmlwk + fishpart
model1 <- stepAIC(lm(hg.form.step1,data=dataset), direction="both")
tbl <- summary(model1)$coefficients
n <- nrow(tbl)
tbl.formatted <- as.matrix(tbl)
# Formatting each column
tbl.formatted[1:n, 1:3] <- format(tbl[1:n, 1:3], digits = 1)
tbl.formatted[1:n, 4] <- format(tbl[1:n, 4], digits = 2, scientific = T)
kable(tbl.formatted, caption = "\\label{tbl:fullmodel}Full model regression results") %>%
kable_styling(latex_options = "striped")
hg.form.step2 = TotHg ~ fisherman + fisherman*(age + restime + height + weight + fishmlwk + fishpart)
model2 <- stepAIC(lm(hg.form.step2,data=dataset), direction="both")
help("stepAIC")
hg.form.step1 = TotHg ~ fisherman + age + restime + height + weight + fishmlwk + fishpart
hg.form.step2 = TotHg ~ 1
model1 <- stepAIC(lm(hg.form.step1,data=dataset), direction="both")
model1 <- stepAIC(lm(hg.form.step1,data=dataset), direction="backward")
model1 <- stepAIC(lm(hg.form.step2,data=dataset), direction="forward")
hg.form.step2 = TotHg ~ fisherman
model1 <- stepAIC(lm(hg.form.step2,data=dataset), direction="forward")
hg.form.step1 = TotHg ~ fisherman + age + restime + height + weight + fishmlwk + fishpart
hg.form.step2 = TotHg ~ fisherman
model1 <- stepAIC(lm(hg.form.step1,data=dataset), direction="both")
model1 <- stepAIC(lm(hg.form.step1,data=dataset), direction="backward")
model1 <- stepAIC(lm(hg.form.step1,data=dataset), direction="forward")
model1 <- stepAIC(lm(hg.form.step2,data=dataset), scope = hg.form.step1, direction="forward")
hg.form.bwd = TotHg ~ fisherman + fisherman:(age + restime + height + weight + fishmlwk + fishpart) - 1
drop1(lm(hg.form.bwd, data = dataset), test="F")
#> Delete fisherman:fishpart
hg.form.bwd = TotHg ~ fisherman + fisherman:(age + restime + height + weight + fishmlwk) - 1
drop1(lm(hg.form.bwd, data = dataset), test="F")
#> Delete fisherman:age
hg.form.bwd = TotHg ~ fisherman + fisherman:(restime + height + weight + fishmlwk) - 1
drop1(lm(hg.form.bwd, data = dataset), test="F")
#> Delete fisherman:restime
hg.form.bwd = TotHg ~ fisherman + fisherman:(height + weight + fishmlwk) - 1
drop1(lm(hg.form.bwd, data = dataset), test="F")
#> Delete fisherman:height
hg.form.bwd = TotHg ~ fisherman + fisherman:(weight + fishmlwk) - 1
drop1(lm(hg.form.bwd, data = dataset), test="F")
#> All parameters are significant (p-value < 0.05)
library(ggplot2)
# plot(hg.lm.selected.model, which=1) #residuals vs fitted
qplot(hg.lm.selected.model$fitted.values, hg.lm.selected.model$residuals, colour=revalue(as.factor(dataset$fisherman), c("0"="non-fisherman", "1"="fisherman")), xlab = "fitted values", ylab = "residuals") +
labs(colour = '') +
theme(legend.position="bottom")
hg.form.selected=TotHg ~  fisherman + fisherman:(weight + fishmlwk)
hg.lm.selected.model=lm(hg.form.selected, data=dataset)
hg.lm.selected.summary <- summary(hg.lm.selected.model)
hg.lm.selected.summary$coefficients
knit_with_parameters('~/STUDY/EPFL/MATH-493_Applied-Biostatistics/Project_1/Report.Rmd')
help(plot)
plot(hg.lm.selected.model, which=2, xlab = "Theoretical quantiles", main="", sub="")#QQ plot
plot(hg.lm.selected.model, which=2, xlab = "Theoretical quantiles", main="", sub="", sup="")#QQ plot
